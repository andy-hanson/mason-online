extends _layout

block content
	+hdr('locals')
	section
		p.
			#[code =] declares new locals.
			#[span.aside So does in #[code a. b] in object builders.]
		p.
			#[code :=] changes an existing local's value.
		.aside Unlike in JS, #[code =] can never be used to change a value, and #[code :=] can't be used as an expression.

	mason-editor
		pre.
			a = 1
			. a
			a := 2
			. a

	section
		p Locals are local to the block they're declared in.
		p The compiler will stop you if you try to access an uninitialized local.

	+hdr('properties')

	section
		p To access a property on an object, use #[code obj.prop].
		p To access a property on #[code this], use #[code .prop].

	mason-editor
		pre.
			obj = {x. 0}
			. obj.x
			f = .\
				|| Equivalent to `this.x`
				.x
			. f.call obj

	section
		p #[code :=] can also set property values.

	mason-editor
		pre.
			obj = {x. 1}
			obj.y := 2
			obj

	section
		p To access any string as a property, use #[code obj."foo"] #[span.aside equivalent to #[code obj.("foo")]].
		p To access any value as a property, use #[code obj.(foo)].
		p #[code :=] can use this syntax too.

	mason-editor
		pre.
			obj = {"wierd name". 1}
			. obj."wierd name"

			obj."wierd name" := 2

			key = "wierd name"
			. obj.(key)
