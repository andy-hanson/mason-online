{"version":3,"sources":["Expression.js"],"names":[],"mappings":"AAAA,IAAI,UAAU,GAAG,AAAC,IAAI,IAAI,IAAI,CAAC,UAAU,IAAK,UAAU,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;AACnF,QAAI,CAAC,GAAG,SAAS,CAAC,MAAM;QAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI;QAAE,CAAC,CAAC;AAC7H,QAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,KAC1H,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA,IAAK,CAAC,CAAC;AAClJ,WAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;CACjE,CAAC;AACF,CAAC,UAAU,OAAO,EAAE;AAChB,QAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,QAAQ,EAAE;AAClE,YAAI,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,AAAC,IAAI,CAAC,KAAK,SAAS,EAAE,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;KAC9E,MACI,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACjD,cAAM,CAAC,CAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,gBAAgB,CAAC,EAAE,OAAO,CAAC,CAAC;KACvE;CACJ,CAAA,CAAE,UAAU,OAAO,EAAE,OAAO,EAAE;AAC3B,gBAAY,CAAC;;AACb,QAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,QAAI,MAAM,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACvC,UAAM,UAAU,SAAS,MAAM,CAAC,OAAO,CAAC;AACpC,oBAAY,GAAG,EAAG;KACrB;AACD,UAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,WAAO,CAAC,OAAO,GAAG,UAAU,CAAC;AAC7B,UAAM,cAAc,SAAS,UAAU,CAAC,EACvC;AACD,WAAO,CAAC,cAAc,GAAG,cAAc,CAAC;AACxC,UAAM,eAAe,SAAS,UAAU,CAAC;AACrC,mBAAW,CAAC,QAAQ,EAAE;AAClB,iBAAK,EAAE,CAAC;AACR,gBAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;KACJ;AACD,WAAO,CAAC,eAAe,GAAG,eAAe,CAAC;AAC1C,UAAM,kBAAkB,SAAS,UAAU,CAAC;AACxC,mBAAW,CAAC,WAAW,EAAE;AACrB,iBAAK,EAAE,CAAC;AACR,gBAAI,CAAC,WAAW,GAAG,WAAW,CAAC;SAClC;KACJ;AACD,WAAO,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;AAChD,UAAM,eAAe,SAAS,UAAU,CAAC;AACrC,mBAAW,CAAC,QAAQ,EAAE,QAAQ,EAAE;AAC5B,iBAAK,EAAE,CAAC;AACR,gBAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,gBAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;AACD,YAAI,MAAM,GAAG;AACT,mBAAO,IAAI,CAAC;SACf;KACJ;AACD,cAAU,CAAC,CACP,MAAM,CAAC,UAAU,CACpB,EAAE,eAAe,CAAC,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC9C,WAAO,CAAC,eAAe,GAAG,eAAe,CAAC;AAC1C,UAAM,gBAAgB,SAAS,UAAU,CAAC;AACtC,mBAAW,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE;AAC/B,iBAAK,EAAE,CAAC;AACR,gBAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,gBAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,gBAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACtB;KACJ;AACD,WAAO,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AAC5C,UAAM,oBAAoB,SAAS,UAAU,CAAC;AAC1C,mBAAW,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE;AAC/B,iBAAK,EAAE,CAAC;AACR,gBAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,gBAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,gBAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACtB;KACJ;AACD,WAAO,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;AACpD,UAAM,gBAAgB,SAAS,UAAU,CAAC;AACtC,mBAAW,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE;AACpC,iBAAK,EAAE,CAAC;AACR,gBAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,gBAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,gBAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACxB;KACJ;AACD,WAAO,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AAC5C,UAAM,iBAAiB,SAAS,UAAU,CAAC;AACvC,mBAAW,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE;AAC/B,iBAAK,EAAE,CAAC;AACR,gBAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,gBAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,gBAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACtB;KACJ;AACD,WAAO,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;AAC9C,UAAM,qBAAqB,SAAS,UAAU,CAAC;AAC3C,mBAAW,CAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE;AACrC,iBAAK,EAAE,CAAC;AACR,gBAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,gBAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAC7B,gBAAI,CAAC,SAAS,GAAG,SAAS,CAAC;SAC9B;KACJ;AACD,WAAO,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;AACtD,UAAM,aAAa,SAAS,UAAU,CAAC;AACnC,mBAAW,CAAC,MAAM,EAAE,IAAI,EAAE;AACtB,iBAAK,EAAE,CAAC;AACR,gBAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,gBAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACzB;KACJ;AACD,WAAO,CAAC,aAAa,GAAG,aAAa,CAAC;AACtC,UAAM,cAAc,SAAS,UAAU,CAAC;AACpC,mBAAW,CAAC,MAAM,EAAE,IAAI,EAAE;AACtB,iBAAK,EAAE,CAAC;AACR,gBAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,gBAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACzB;KACJ;AACD,WAAO,CAAC,cAAc,GAAG,cAAc,CAAC;AACxC,UAAM,aAAa,SAAS,MAAM,CAAC,OAAO,CAAC;AACvC,mBAAW,CAAC,QAAQ,EAAE;AAClB,iBAAK,EAAE,CAAC;AACR,gBAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;KACJ;AACD,WAAO,CAAC,aAAa,GAAG,aAAa,CAAC;AACtC,UAAM,gBAAgB,SAAS,UAAU,CAAC;AACtC,mBAAW,CAAC,MAAM,EAAE;AAChB,iBAAK,EAAE,CAAC;AACR,gBAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACxB;AACD,YAAI,IAAI,GAAG;AACP,mBAAO,kBAAkB,CAAC;SAC7B;AACD,YAAI,QAAQ,GAAG;AACX,kBAAM,IAAI,KAAK,EAAE,CAAC;SACrB;KACJ;AACD,cAAU,CAAC,CACP,MAAM,CAAC,UAAU,CACpB,EAAE,gBAAgB,CAAC,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AAC7C,cAAU,CAAC,CACP,MAAM,CAAC,UAAU,CACpB,EAAE,gBAAgB,CAAC,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;AACjD,WAAO,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AAC5C,UAAM,qBAAqB,SAAS,gBAAgB,CAAC;AACjD,mBAAW,CAAC,MAAM,EAAE,QAAQ,EAAE;AAC1B,iBAAK,CAAC,MAAM,CAAC,CAAC;AACd,gBAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;AACD,YAAI,QAAQ,GAAG;AACX,mBAAO,KAAK,CAAC;SAChB;KACJ;AACD,WAAO,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;AACtD,UAAM,wBAAwB,SAAS,gBAAgB,CAAC;AACpD,mBAAW,CAAC,MAAM,EAAE,QAAQ,EAAE;AAC1B,iBAAK,CAAC,MAAM,CAAC,CAAC;AACd,gBAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;AACD,YAAI,QAAQ,GAAG;AACX,mBAAO,IAAI,CAAC;SACf;KACJ;AACD,WAAO,CAAC,wBAAwB,GAAG,wBAAwB,CAAC;AAC5D,UAAM,SAAS,SAAS,UAAU,CAAC;AAC/B,YAAI,IAAI,GAAG;AACP,mBAAO,iBAAiB,CAAC;SAC5B;KACJ;AACD,WAAO,CAAC,SAAS,GAAG,SAAS,CAAC;AAC9B,UAAM,eAAe,SAAS,SAAS,CAAC;AACpC,mBAAW,CAAC,QAAQ,EAAE;AAClB,iBAAK,EAAE,CAAC;AACR,gBAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;AACD,YAAI,QAAQ,GAAG;AACX,mBAAO,KAAK,CAAC;SAChB;KACJ;AACD,WAAO,CAAC,eAAe,GAAG,eAAe,CAAC;AAC1C,UAAM,uBAAuB,SAAS,SAAS,CAAC;AAC5C,mBAAW,CAAC,QAAQ,EAAE;AAClB,iBAAK,EAAE,CAAC;AACR,gBAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;AACD,YAAI,QAAQ,GAAG;AACX,mBAAO,IAAI,CAAC;SACf;KACJ;AACD,WAAO,CAAC,uBAAuB,GAAG,uBAAuB,CAAC;AAC1D,UAAM,YAAY,SAAS,UAAU,CAAC;AAClC,mBAAW,CAAC,IAAI,EAAE,QAAQ,EAAE;AACxB,iBAAK,EAAE,CAAC;AACR,gBAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,gBAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;KACJ;AACD,WAAO,CAAC,YAAY,GAAG,YAAY,CAAC;CACvC,CAAC,CAAC","file":"Expression.js","sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", './Node', './private/util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    var Node_1 = require('./Node');\n    var util_1 = require('./private/util');\n    class Expression extends Node_1.default {\n        isExpression() { }\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = Expression;\n    class ThisExpression extends Expression {\n    }\n    exports.ThisExpression = ThisExpression;\n    class ArrayExpression extends Expression {\n        constructor(elements) {\n            super();\n            this.elements = elements;\n        }\n    }\n    exports.ArrayExpression = ArrayExpression;\n    class SequenceExpression extends Expression {\n        constructor(expressions) {\n            super();\n            this.expressions = expressions;\n        }\n    }\n    exports.SequenceExpression = SequenceExpression;\n    class UnaryExpression extends Expression {\n        constructor(operator, argument) {\n            super();\n            this.operator = operator;\n            this.argument = argument;\n        }\n        get prefix() {\n            return true;\n        }\n    }\n    __decorate([\n        util_1.enumerable\n    ], UnaryExpression.prototype, \"prefix\", null);\n    exports.UnaryExpression = UnaryExpression;\n    class BinaryExpression extends Expression {\n        constructor(operator, left, right) {\n            super();\n            this.operator = operator;\n            this.left = left;\n            this.right = right;\n        }\n    }\n    exports.BinaryExpression = BinaryExpression;\n    class AssignmentExpression extends Expression {\n        constructor(operator, left, right) {\n            super();\n            this.operator = operator;\n            this.left = left;\n            this.right = right;\n        }\n    }\n    exports.AssignmentExpression = AssignmentExpression;\n    class UpdateExpression extends Expression {\n        constructor(operator, argument, prefix) {\n            super();\n            this.operator = operator;\n            this.argument = argument;\n            this.prefix = prefix;\n        }\n    }\n    exports.UpdateExpression = UpdateExpression;\n    class LogicalExpression extends Expression {\n        constructor(operator, left, right) {\n            super();\n            this.operator = operator;\n            this.left = left;\n            this.right = right;\n        }\n    }\n    exports.LogicalExpression = LogicalExpression;\n    class ConditionalExpression extends Expression {\n        constructor(test, consequent, alternate) {\n            super();\n            this.test = test;\n            this.consequent = consequent;\n            this.alternate = alternate;\n        }\n    }\n    exports.ConditionalExpression = ConditionalExpression;\n    class NewExpression extends Expression {\n        constructor(callee, args) {\n            super();\n            this.callee = callee;\n            this.arguments = args;\n        }\n    }\n    exports.NewExpression = NewExpression;\n    class CallExpression extends Expression {\n        constructor(callee, args) {\n            super();\n            this.callee = callee;\n            this.arguments = args;\n        }\n    }\n    exports.CallExpression = CallExpression;\n    class SpreadElement extends Node_1.default {\n        constructor(argument) {\n            super();\n            this.argument = argument;\n        }\n    }\n    exports.SpreadElement = SpreadElement;\n    class MemberExpression extends Expression {\n        constructor(object) {\n            super();\n            this.object = object;\n        }\n        get type() {\n            return 'MemberExpression';\n        }\n        get computed() {\n            throw new Error();\n        }\n    }\n    __decorate([\n        util_1.enumerable\n    ], MemberExpression.prototype, \"type\", null);\n    __decorate([\n        util_1.enumerable\n    ], MemberExpression.prototype, \"computed\", null);\n    exports.MemberExpression = MemberExpression;\n    class MemberExpressionPlain extends MemberExpression {\n        constructor(object, property) {\n            super(object);\n            this.property = property;\n        }\n        get computed() {\n            return false;\n        }\n    }\n    exports.MemberExpressionPlain = MemberExpressionPlain;\n    class MemberExpressionComputed extends MemberExpression {\n        constructor(object, property) {\n            super(object);\n            this.property = property;\n        }\n        get computed() {\n            return true;\n        }\n    }\n    exports.MemberExpressionComputed = MemberExpressionComputed;\n    class YieldLike extends Expression {\n        get type() {\n            return 'YieldExpression';\n        }\n    }\n    exports.YieldLike = YieldLike;\n    class YieldExpression extends YieldLike {\n        constructor(argument) {\n            super();\n            this.argument = argument;\n        }\n        get delegate() {\n            return false;\n        }\n    }\n    exports.YieldExpression = YieldExpression;\n    class YieldDelegateExpression extends YieldLike {\n        constructor(argument) {\n            super();\n            this.argument = argument;\n        }\n        get delegate() {\n            return true;\n        }\n    }\n    exports.YieldDelegateExpression = YieldDelegateExpression;\n    class MetaProperty extends Expression {\n        constructor(meta, property) {\n            super();\n            this.meta = meta;\n            this.property = property;\n        }\n    }\n    exports.MetaProperty = MetaProperty;\n});\n"],"sourceRoot":"/source/"}