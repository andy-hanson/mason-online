{"version":3,"sources":["private/transpile/ms.js","private/transpile/ms.ts"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAV,EAAmB;AAChB,QAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,OAAO,OAAO,OAAP,KAAmB,QAA1B,EAAoC;AAClE,YAAI,IAAI,QAAQ,OAAR,EAAiB,OAAjB,CAAJ,CAD8D,IAC3B,MAAM,SAAN,EAAiB,OAAO,OAAP,GAAiB,CAAjB,CAArB;KADvC,MAGK,IAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAP,EAAY;AACjD,eAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,sBAAvB,EAA+C,sBAA/C,EAAuE,4BAAvE,CAAP,EAA6G,OAA7G,EADiD;KAAhD;CAJR,CAAD,CAOG,UAAU,OAAV,EAAmB,OAAnB,EAA4B;AAC3B,iBAD2B;;ACP/B,UAAA,eAAA,QAAyC,sBAAzC,CAAA,CDO+B;ACN/B,UAAA,eAAA,QAAuB,sBAAvB,CAAA,CDM+B;ACL/B,UAAA,SAAA,QAAqB,4BAArB,CAAA,CDK+B;ACH/B,aAAA,MAAA,CAAuB,IAAvB,EAA+D;0CAAvB;;SAAuB;;AAC9D,eAAO,IAAI,aAAA,cAAA,CAAe,OAAA,MAAA,CAAO,IAAP,EAAa,IAAb,CAAnB,EAAuC,IAAvC,CAAP,CAD8D;KAA/D;AAAgB,YAAA,MAAA,GAAM,MAAN,CDGe;ACC/B,aAAA,QAAA,CAAyB,IAAzB,EAAqC;AACpC,eAAO,OAAA,MAAA,CAAO,IAAP,EAAa,IAAb,CAAP,CADoC;KAArC;AAAgB,YAAA,QAAA,GAAQ,QAAR,CDDe;ACK/B,UAAM,OAAO,IAAI,aAAA,OAAA,CAAW,KAAf,CAAP,CDLyB;CAA5B,CAPH","file":"private/transpile/ms.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Expression', 'esast/lib/Identifier', 'esast-create-util/lib/util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Expression_1 = require('esast/lib/Expression');\n    const Identifier_1 = require('esast/lib/Identifier');\n    const util_1 = require('esast-create-util/lib/util');\n    function msCall(name, ...args) {\n        return new Expression_1.CallExpression(util_1.member(idMs, name), args);\n    }\n    exports.msCall = msCall;\n    function msMember(name) {\n        return util_1.member(idMs, name);\n    }\n    exports.msMember = msMember;\n    const idMs = new Identifier_1.default('_ms');\n});\n","import Expression, {CallExpression} from 'esast/lib/Expression'\nimport Identifier from 'esast/lib/Identifier'\nimport {member} from 'esast-create-util/lib/util'\n\nexport function msCall(name: string, ...args: Array<Expression>): Expression {\n\treturn new CallExpression(member(idMs, name), args)\n}\n\nexport function msMember(name: string): Expression {\n\treturn member(idMs, name)\n}\n\nconst idMs = new Identifier('_ms')\n"],"sourceRoot":"/source/"}