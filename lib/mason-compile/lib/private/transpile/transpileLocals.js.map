{"version":3,"sources":["private/transpile/transpileLocals.js"],"names":[],"mappings":"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","file":"private/transpile/transpileLocals.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Declaration', 'esast/lib/Expression', 'esast/lib/Identifier', 'esast/lib/Literal', 'esast/lib/Statement', 'esast-create-util/lib/util', 'op/Op', '../ast/locals', '../context', '../util', './context', './ms', './transpileVal', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Declaration_1 = require('esast/lib/Declaration');\n    const Expression_1 = require('esast/lib/Expression');\n    const Identifier_1 = require('esast/lib/Identifier');\n    const Literal_1 = require('esast/lib/Literal');\n    const Statement_1 = require('esast/lib/Statement');\n    const util_1 = require('esast-create-util/lib/util');\n    const Op_1 = require('op/Op');\n    const locals_1 = require('../ast/locals');\n    const context_1 = require('../context');\n    const util_2 = require('../util');\n    const context_2 = require('./context');\n    const ms_1 = require('./ms');\n    const transpileVal_1 = require('./transpileVal');\n    const util_3 = require('./util');\n    function transpileLocalDeclare(_) {\n        return util_3.loc(_, new Identifier_1.default(idForDeclareCached(_).name));\n    }\n    exports.transpileLocalDeclare = transpileLocalDeclare;\n    function transpileLocalAccessNoLoc(_) {\n        const { name } = _;\n        if (name === 'this')\n            return new Identifier_1.default('_this');\n        else {\n            const ld = context_2.verifyResults.localDeclareForAccess(_);\n            return ld === undefined ? util_1.identifier(name) : accessLocalDeclare(ld);\n        }\n    }\n    exports.transpileLocalAccessNoLoc = transpileLocalAccessNoLoc;\n    function accessLocalDeclare(localDeclare) {\n        const id = idForDeclareCached(localDeclare);\n        return localDeclare.isLazy ? ms_1.msCall('unlazy', id) : new Identifier_1.default(id.name);\n    }\n    exports.accessLocalDeclare = accessLocalDeclare;\n    const declareToId = new WeakMap();\n    function idForDeclareCached(localDeclare) {\n        let _ = declareToId.get(localDeclare);\n        if (_ === undefined) {\n            _ = util_1.identifier(localDeclare.name);\n            declareToId.set(localDeclare, _);\n        }\n        return _;\n    }\n    exports.idForDeclareCached = idForDeclareCached;\n    function opTypeCheckForLocalDeclare(localDeclare) {\n        return Op_1.opIf(!localDeclare.isLazy, () => Op_1.opMap(localDeclare.opType, type => new Statement_1.ExpressionStatement(ms_1.msCall('checkInstance', transpileVal_1.default(type), accessLocalDeclare(localDeclare), new Literal_1.LiteralString(localDeclare.name)))));\n    }\n    exports.opTypeCheckForLocalDeclare = opTypeCheckForLocalDeclare;\n    function makeDeclare(localDeclare, val) {\n        return new Declaration_1.VariableDeclarationLet([new Declaration_1.VariableDeclarator(idForDeclareCached(localDeclare), val)]);\n    }\n    exports.makeDeclare = makeDeclare;\n    function plainLet(identifier, value) {\n        return new Declaration_1.VariableDeclarationLet([new Declaration_1.VariableDeclarator(identifier, value)]);\n    }\n    exports.plainLet = plainLet;\n    function plainLetForDeclare(declare, value) {\n        return plainLet(transpileLocalDeclare(declare), value);\n    }\n    exports.plainLetForDeclare = plainLetForDeclare;\n    function makeDeclarator(assignee, value, valueIsAlreadyLazy) {\n        const { name, opType } = assignee;\n        const isLazy = assignee.isLazy;\n        value = isLazy ? value : util_3.maybeWrapInCheckInstance(value, opType, name);\n        const val = isLazy && !valueIsAlreadyLazy ? util_3.lazyWrap(value) : value;\n        util_2.assert(isLazy || !valueIsAlreadyLazy);\n        return new Declaration_1.VariableDeclarator(idForDeclareCached(assignee), val);\n    }\n    exports.makeDeclarator = makeDeclarator;\n    function makeDestructureDeclarators(assignees, isLazy, value, isModule) {\n        const id = context_2.getDestructuredId();\n        const destructuredName = `_$${id}`;\n        const idDestructured = new Identifier_1.default(destructuredName);\n        const declarators = assignees.map(assignee => {\n            const get = getMember(idDestructured, assignee.name, isLazy, isModule);\n            return makeDeclarator(assignee, get, isLazy);\n        });\n        const val = isLazy && !isModule ? util_3.lazyWrap(value) : value;\n        return util_2.cat(new Declaration_1.VariableDeclarator(idDestructured, val), declarators);\n    }\n    exports.makeDestructureDeclarators = makeDestructureDeclarators;\n    function getMember(object, gotName, isLazy, isModule) {\n        return isLazy ?\n            ms_1.msCall('lazyProp', object, new Literal_1.LiteralString(gotName)) :\n            isModule && context_1.compileOptions.checks ?\n                ms_1.msCall('get', object, new Literal_1.LiteralString(gotName)) :\n                util_1.member(object, gotName);\n    }\n    function transpileAssignNoLoc(_) {\n        if (_ instanceof locals_1.AssignSingle)\n            return transpileAssignSingleNoLoc(_);\n        else if (_ instanceof locals_1.AssignDestructure)\n            return transpileAssignDestructureNoLoc(_);\n        else\n            throw new Error(_.constructor.name);\n    }\n    exports.transpileAssignNoLoc = transpileAssignNoLoc;\n    function transpileAssignSingle(_) {\n        return util_3.loc(_, transpileAssignSingleNoLoc(_));\n    }\n    exports.transpileAssignSingle = transpileAssignSingle;\n    function transpileAssignSingleNoLoc({ assignee, value }, valWrap) {\n        const val = valWrap === undefined ? transpileVal_1.default(value) : valWrap(transpileVal_1.default(value));\n        return new Declaration_1.VariableDeclarationLet([makeDeclarator(assignee, val, false)]);\n    }\n    exports.transpileAssignSingleNoLoc = transpileAssignSingleNoLoc;\n    function transpileAssignDestructureNoLoc({ assignees, kind, value }) {\n        return new Declaration_1.VariableDeclarationLet(makeDestructureDeclarators(assignees, kind === 1, transpileVal_1.default(value), false));\n    }\n    function transpileLocalMutateNoLoc({ name, value }) {\n        return new Statement_1.ExpressionStatement(new Expression_1.AssignmentExpression('=', util_1.identifier(name), transpileVal_1.default(value)));\n    }\n    exports.transpileLocalMutateNoLoc = transpileLocalMutateNoLoc;\n});\n"],"sourceRoot":"/source/"}