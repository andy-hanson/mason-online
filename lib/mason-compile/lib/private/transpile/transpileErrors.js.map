{"version":3,"sources":["private/transpile/transpileErrors.js"],"names":[],"mappings":"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","file":"private/transpile/transpileErrors.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Declaration', 'esast/lib/Expression', 'esast/lib/Identifier', 'esast/lib/Literal', 'esast/lib/Statement', 'op/Op', '../ast/Call', '../ast/Quote', '../ast/Val', '../util', './esast-constants', './ms', './throwErrorFromString', './transpileBlock', './transpileLocals', './transpileMemberName', './transpileQuote', './transpileVal', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Declaration_1 = require('esast/lib/Declaration');\n    const Expression_1 = require('esast/lib/Expression');\n    const Identifier_1 = require('esast/lib/Identifier');\n    const Literal_1 = require('esast/lib/Literal');\n    const Statement_1 = require('esast/lib/Statement');\n    const Op_1 = require('op/Op');\n    const Call_1 = require('../ast/Call');\n    const Quote_1 = require('../ast/Quote');\n    const Val_1 = require('../ast/Val');\n    const util_1 = require('../util');\n    const esast_constants_1 = require('./esast-constants');\n    const ms_1 = require('./ms');\n    const throwErrorFromString_1 = require('./throwErrorFromString');\n    const transpileBlock_1 = require('./transpileBlock');\n    const transpileLocals_1 = require('./transpileLocals');\n    const transpileMemberName_1 = require('./transpileMemberName');\n    const transpileQuote_1 = require('./transpileQuote');\n    const transpileVal_1 = require('./transpileVal');\n    const util_2 = require('./util');\n    function transpileAssertNoLoc({ negate, condition, opThrown }) {\n        const failCond = () => {\n            const cond = transpileVal_1.default(condition);\n            return negate ? cond : new Expression_1.UnaryExpression('!', cond);\n        };\n        return Op_1.caseOp(opThrown, _ => new Statement_1.IfStatement(failCond(), doThrow(_)), () => {\n            if (condition instanceof Call_1.default) {\n                const { called, args } = condition;\n                const argAsts = args.map(transpileVal_1.default);\n                return new Statement_1.ExpressionStatement(called instanceof Val_1.Member ?\n                    ms_1.msCall(negate ? 'assertNotMember' : 'assertMember', transpileVal_1.default(called.object), transpileMemberName_1.default(called.name), ...argAsts) :\n                    ms_1.msCall(negate ? 'assertNot' : 'assert', transpileVal_1.default(called), ...argAsts));\n            }\n            else\n                return new Statement_1.IfStatement(failCond(), throwAssertFail);\n        });\n    }\n    exports.transpileAssertNoLoc = transpileAssertNoLoc;\n    const throwAssertFail = throwErrorFromString_1.default('Assertion failed.');\n    function transpileExceptValNoLoc(_) {\n        return transpileBlock_1.blockWrap(new Statement_1.BlockStatement(util_1.toArray(transpileExceptDoNoLoc(_))));\n    }\n    exports.transpileExceptValNoLoc = transpileExceptValNoLoc;\n    function transpileExceptDoNoLoc({ tried, typedCatches, opCatchAll, opElse, opFinally }) {\n        return Op_1.caseOp(opElse, elseBlock => {\n            const lead = util_1.cat(util_2.transpileLines(tried.lines), setExceptElse);\n            const tryAst = transpileBlock_1.default(elseBlock, { lead: lead });\n            const catchAst = transpileCatches(typedCatches, opCatchAll, true);\n            return [letExceptElse, new Statement_1.TryStatement(tryAst, catchAst, Op_1.opMap(opFinally, transpileBlock_1.transpileBlockDo))];\n        }, () => new Statement_1.TryStatement(transpileBlock_1.default(tried), transpileCatches(typedCatches, opCatchAll, false), Op_1.opMap(opFinally, transpileBlock_1.transpileBlockDo)));\n    }\n    exports.transpileExceptDoNoLoc = transpileExceptDoNoLoc;\n    function transpileCatches(typedCatches, opCatchAll, hasElse) {\n        const allCatches = util_1.cat(typedCatches, opCatchAll);\n        const needsErrorDeclare = !util_1.allSame(allCatches, _ => _.caught.name);\n        const idCaught = needsErrorDeclare ? idCaughtDefault : transpileLocals_1.idForDeclareCached(allCatches[0].caught);\n        const throwIfOnElse = () => new Statement_1.IfStatement(idExceptElse, new Statement_1.ThrowStatement(idCaught));\n        const catchAll = Op_1.caseOp(opCatchAll, _ => transpileCatch(_, needsErrorDeclare), () => new Statement_1.BlockStatement([new Statement_1.ThrowStatement(idCaught)]));\n        const catchBlock = (() => {\n            if (util_1.isEmpty(typedCatches)) {\n                if (hasElse)\n                    catchAll.body.unshift(throwIfOnElse());\n                return catchAll;\n            }\n            else {\n                let catches = catchAll;\n                for (const typedCatch of util_1.reverseIter(typedCatches)) {\n                    const type = Op_1.orThrow(typedCatch.caught.opType);\n                    const cond = ms_1.msCall('hasInstance', transpileVal_1.default(type), idCaught);\n                    const then = transpileCatch(typedCatch, needsErrorDeclare);\n                    catches = new Statement_1.IfStatement(cond, then, catches);\n                }\n                return new Statement_1.BlockStatement(hasElse ? [throwIfOnElse(), catches] : [catches]);\n            }\n        })();\n        return new Statement_1.CatchClause(idCaught, catchBlock);\n    }\n    function transpileCatch(_, needsErrorDeclare) {\n        const { caught, block } = _;\n        return util_2.loc(_, needsErrorDeclare ?\n            transpileBlock_1.transpileBlockNoLoc(block, { lead: transpileLocals_1.plainLetForDeclare(caught, idCaughtDefault) }) :\n            transpileBlock_1.transpileBlockNoLoc(block));\n    }\n    const idCaughtDefault = new Identifier_1.default('error_');\n    const idExceptElse = new Identifier_1.default('exceptElse_');\n    const letExceptElse = new Declaration_1.VariableDeclarationLet([new Declaration_1.VariableDeclarator(idExceptElse, new Literal_1.LiteralBoolean(false))]);\n    const setExceptElse = new Statement_1.ExpressionStatement(new Expression_1.AssignmentExpression('=', idExceptElse, new Literal_1.LiteralBoolean(true)));\n    function transpileThrow(_) {\n        return util_2.loc(_, transpileThrowNoLoc(_));\n    }\n    exports.transpileThrow = transpileThrow;\n    function transpileThrowNoLoc(_) {\n        return Op_1.caseOp(_.opThrown, doThrow, () => new Statement_1.ThrowStatement(new Expression_1.NewExpression(esast_constants_1.esGlobalError, [litStrThrow])));\n    }\n    exports.transpileThrowNoLoc = transpileThrowNoLoc;\n    const litStrThrow = new Literal_1.LiteralString('An error occurred.');\n    function doThrow(thrown) {\n        return new Statement_1.ThrowStatement(thrown instanceof Quote_1.default ?\n            new Expression_1.NewExpression(esast_constants_1.esGlobalError, [transpileQuote_1.default(thrown)]) :\n            transpileVal_1.default(thrown));\n    }\n});\n"],"sourceRoot":"/source/"}