{"version":3,"sources":["private/transpile/transpileBlock.js"],"names":[],"mappings":"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","file":"private/transpile/transpileBlock.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Expression', 'esast/lib/Function', 'esast/lib/Statement', '../ast/Block', '../util', './context', './esast-constants', './transpileErrors', './transpileVal', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Expression_1 = require('esast/lib/Expression');\n    const Function_1 = require('esast/lib/Function');\n    const Statement_1 = require('esast/lib/Statement');\n    const Block_1 = require('../ast/Block');\n    const util_1 = require('../util');\n    const context_1 = require('./context');\n    const esast_constants_1 = require('./esast-constants');\n    const transpileErrors_1 = require('./transpileErrors');\n    const transpileVal_1 = require('./transpileVal');\n    const util_2 = require('./util');\n    function transpileBlock(_, options = {}) {\n        return util_2.loc(_, transpileBlockNoLoc(_, options));\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = transpileBlock;\n    function transpileBlockNoLoc(_, options = {}) {\n        const { lines } = _;\n        const kind = context_1.verifyResults.blockKind(_);\n        const { lead = null, opReturnType: opReturnType = null, follow = null } = options;\n        function blockWithReturn(returned, lines) {\n            const doReturn = new Statement_1.ReturnStatement(util_2.maybeWrapInCheckInstance(returned, opReturnType, 'returned value'));\n            return new Statement_1.BlockStatement(util_1.cat(lead, lines, doReturn));\n        }\n        switch (kind) {\n            case 0:\n                util_1.assert(opReturnType === null);\n                return transpileBlockDoWithLeadAndFollowNoLoc(_, lead, follow);\n            case 1:\n                return new Statement_1.BlockStatement(util_1.cat(lead, util_2.transpileLines(util_1.rtail(lines)), transpileErrors_1.transpileThrow(util_1.last(lines))));\n            case 2:\n                return blockWithReturn(transpileVal_1.default(util_1.last(lines)), util_2.transpileLines(util_1.rtail(lines)));\n            case 3:\n            case 4:\n            case 5: {\n                const declare = kind === 3 ?\n                    esast_constants_1.declareBuiltBag :\n                    kind === 4 ? esast_constants_1.declareBuiltMap : esast_constants_1.declareBuiltObj;\n                return blockWithReturn(esast_constants_1.idBuilt, util_1.cat(declare, util_2.transpileLines(lines)));\n            }\n            default:\n                throw new Error(String(kind));\n        }\n    }\n    exports.transpileBlockNoLoc = transpileBlockNoLoc;\n    function transpileBlockVal(_, options = {}) {\n        return blockWrap(transpileBlock(_, options));\n    }\n    exports.transpileBlockVal = transpileBlockVal;\n    function transpileBlockDo(_) {\n        return util_2.loc(_, new Statement_1.BlockStatement(util_2.transpileLines(_.lines)));\n    }\n    exports.transpileBlockDo = transpileBlockDo;\n    function transpileBlockDoWithLeadAndFollow(_, lead, follow) {\n        return util_2.loc(_, transpileBlockDoWithLeadAndFollowNoLoc(_, lead, follow));\n    }\n    exports.transpileBlockDoWithLeadAndFollow = transpileBlockDoWithLeadAndFollow;\n    function transpileBlockDoWithLeadAndFollowNoLoc(_, lead, follow) {\n        return new Statement_1.BlockStatement(util_1.cat(lead, util_2.transpileLines(_.lines), follow));\n    }\n    function blockWrap(block) {\n        const thunk = context_1.funKind === 0 ?\n            new Function_1.ArrowFunctionExpression([], block) :\n            new Function_1.FunctionExpression(null, [], block, { generator: true });\n        return util_2.callPreservingFunKind(new Expression_1.CallExpression(thunk, []));\n    }\n    exports.blockWrap = blockWrap;\n    function blockWrapStatement(statement) {\n        return blockWrap(new Statement_1.BlockStatement([statement]));\n    }\n    exports.blockWrapStatement = blockWrapStatement;\n    function blockWrapIfBlock(_) {\n        return _ instanceof Block_1.default ? transpileBlockVal(_) : transpileVal_1.default(_);\n    }\n    exports.blockWrapIfBlock = blockWrapIfBlock;\n});\n"],"sourceRoot":"/source/"}