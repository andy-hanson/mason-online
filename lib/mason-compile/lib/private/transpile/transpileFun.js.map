{"version":3,"sources":["private/transpile/transpileFun.js"],"names":[],"mappings":"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","file":"private/transpile/transpileFun.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Expression', 'esast/lib/Function', 'esast/lib/Identifier', 'esast/lib/Literal', 'esast/lib/Statement', 'esast-create-util/lib/util', 'op/Op', '../context', '../ast/Fun', '../util', './context', './esast-constants', './ms', './transpileBlock', './transpileLocals', './transpileMemberName', './transpileOperator', './transpileVal', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Expression_1 = require('esast/lib/Expression');\n    const Function_1 = require('esast/lib/Function');\n    const Identifier_1 = require('esast/lib/Identifier');\n    const Literal_1 = require('esast/lib/Literal');\n    const Statement_1 = require('esast/lib/Statement');\n    const util_1 = require('esast-create-util/lib/util');\n    const Op_1 = require('op/Op');\n    const context_1 = require('../context');\n    const Fun_1 = require('../ast/Fun');\n    const util_2 = require('../util');\n    const context_2 = require('./context');\n    const esast_constants_1 = require('./esast-constants');\n    const ms_1 = require('./ms');\n    const transpileBlock_1 = require('./transpileBlock');\n    const transpileLocals_1 = require('./transpileLocals');\n    const transpileMemberName_1 = require('./transpileMemberName');\n    const transpileOperator_1 = require('./transpileOperator');\n    const transpileVal_1 = require('./transpileVal');\n    const util_3 = require('./util');\n    function transpileFunNoLoc(_) {\n        if (_ instanceof Fun_1.FunBlock)\n            return transpileFunBlockNoLoc(_);\n        else if (_ instanceof Fun_1.FunGetter)\n            return focusFun(transpileMemberName_1.transpileMember(esast_constants_1.idFocus, _.name));\n        else if (_ instanceof Fun_1.FunMember) {\n            const { opObject, name } = _;\n            const nameAst = transpileMemberName_1.default(name);\n            return Op_1.caseOp(opObject, _ => ms_1.msCall('methodBound', transpileVal_1.default(_), nameAst), () => ms_1.msCall('methodUnbound', nameAst));\n        }\n        else if (_ instanceof Fun_1.FunOperator)\n            return transpileOperator_1.transpileFunOperatorNoLoc(_);\n        else if (_ instanceof Fun_1.FunSimple)\n            return focusFun(transpileVal_1.default(_.value));\n        else if (_ instanceof Fun_1.FunUnary)\n            return transpileOperator_1.transpileFunUnaryNoLoc(_);\n        else\n            throw new Error(_.constructor.name);\n    }\n    exports.transpileFunNoLoc = transpileFunNoLoc;\n    function transpileFunBlock(_, opts = {}) {\n        return util_3.loc(_, transpileFunBlockNoLoc(_, opts));\n    }\n    exports.transpileFunBlock = transpileFunBlock;\n    function transpileFunBlockNoLoc(_, opts = {}) {\n        const { args, opRestArg, block, kind, opDeclareThis, opReturnType } = _;\n        const { leadStatements = null, dontDeclareThis = false } = opts;\n        return context_2.withFunKind(kind, () => {\n            const nArgs = new Literal_1.LiteralNumber(args.length);\n            const opDeclareRest = Op_1.opMap(opRestArg, rest => transpileLocals_1.makeDeclare(rest, new Expression_1.CallExpression(arraySliceCall, [idArguments, nArgs])));\n            const argChecks = Op_1.opIf(context_1.compileOptions.checks, () => Op_1.flatMapOps(args, transpileLocals_1.opTypeCheckForLocalDeclare));\n            const opDeclareThisAst = Op_1.opIf(opDeclareThis !== null && !dontDeclareThis, () => esast_constants_1.declareLexicalThis);\n            const lead = util_2.cat(opDeclareRest, opDeclareThisAst, argChecks, leadStatements);\n            const body = () => transpileBlock_1.default(block, { lead: lead, opReturnType: opReturnType });\n            const argAsts = args.map(transpileLocals_1.transpileLocalDeclare);\n            const id = Op_1.opMap(context_2.verifyResults.opName(_), util_1.identifier);\n            switch (kind) {\n                case 1: {\n                    const plainBody = transpileBlock_1.default(block, { opReturnType: opReturnType });\n                    const genFunc = new Function_1.FunctionExpression(null, [], plainBody, { generator: true });\n                    const ret = new Statement_1.ReturnStatement(ms_1.msCall('async', genFunc));\n                    return new Function_1.FunctionExpression(id, argAsts, new Statement_1.BlockStatement(util_2.cat(lead, ret)));\n                }\n                case 2:\n                    return new Function_1.FunctionExpression(id, argAsts, body(), { generator: true });\n                case 0:\n                    return id === null && opDeclareThis === null && opDeclareRest === null ?\n                        new Function_1.ArrowFunctionExpression(argAsts, body()) :\n                        new Function_1.FunctionExpression(id, argAsts, body());\n                default:\n                    throw new Error(String(kind));\n            }\n        });\n    }\n    const arraySliceCall = util_1.member(util_1.member(new Expression_1.ArrayExpression([]), 'slice'), 'call');\n    const idArguments = new Identifier_1.default('arguments');\n    function focusFun(value) {\n        return new Function_1.ArrowFunctionExpression([esast_constants_1.idFocus], value);\n    }\n});\n"],"sourceRoot":"/source/"}