{"version":3,"sources":["private/transpile/transpileClass.js"],"names":[],"mappings":"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","file":"private/transpile/transpileClass.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Class', 'esast/lib/Expression', 'esast/lib/Function', 'esast/lib/Identifier', 'esast/lib/Literal', 'esast/lib/Statement', 'esast-create-util/lib/util', 'op/Op', '../ast/Class', '../util', './context', './esast-constants', './ms', './transpileBlock', './transpileCall', './transpileClassTraitCommon', './transpileFun', './transpileLocals', './transpileMemberName', './transpileVal', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Class_1 = require('esast/lib/Class');\n    const Expression_1 = require('esast/lib/Expression');\n    const Function_1 = require('esast/lib/Function');\n    const Identifier_1 = require('esast/lib/Identifier');\n    const Literal_1 = require('esast/lib/Literal');\n    const Statement_1 = require('esast/lib/Statement');\n    const util_1 = require('esast-create-util/lib/util');\n    const Op_1 = require('op/Op');\n    const Class_2 = require('../ast/Class');\n    const util_2 = require('../util');\n    const context_1 = require('./context');\n    const esast_constants_1 = require('./esast-constants');\n    const ms_1 = require('./ms');\n    const transpileBlock_1 = require('./transpileBlock');\n    const transpileCall_1 = require('./transpileCall');\n    const transpileClassTraitCommon_1 = require('./transpileClassTraitCommon');\n    const transpileFun_1 = require('./transpileFun');\n    const transpileLocals_1 = require('./transpileLocals');\n    const transpileMemberName_1 = require('./transpileMemberName');\n    const transpileVal_1 = require('./transpileVal');\n    const util_3 = require('./util');\n    function transpileClassNoLoc(_) {\n        const { opFields, opSuperClass, traits, opDo, statics, opConstructor, methods, isRecord } = _;\n        const opName = Op_1.opMap(context_1.verifyResults.opName(_), util_1.identifier);\n        const methodAsts = util_2.cat(statics.map(_ => transpileClassTraitCommon_1.transpileMethodToDefinition(_, true)), Op_1.caseOp(opConstructor, transpileConstructor, () => Op_1.opMap(opFields, _ => defaultConstructor(_, opSuperClass !== null))), methods.map(_ => transpileClassTraitCommon_1.transpileMethodToDefinition(_, false)));\n        const classExpr = new Class_1.ClassExpression(opName, Op_1.opMap(opSuperClass, transpileVal_1.default), new Class_1.ClassBody(methodAsts));\n        if (opDo === null && !isRecord && util_2.isEmpty(traits))\n            return classExpr;\n        else {\n            const lead = util_2.cat(transpileLocals_1.plainLet(esast_constants_1.idFocus, classExpr), Op_1.opMap(opFields, beRecord), traits.map(_ => new Statement_1.ExpressionStatement(ms_1.msCall('traitDo', esast_constants_1.idFocus, transpileVal_1.default(_)))));\n            const block = Op_1.caseOp(opDo, _ => transpileBlock_1.transpileBlockDoWithLeadAndFollow(_.block, lead, esast_constants_1.returnFocus), () => new Statement_1.BlockStatement(util_2.cat(lead, esast_constants_1.returnFocus)));\n            return transpileBlock_1.blockWrap(block);\n        }\n    }\n    exports.transpileClassNoLoc = transpileClassNoLoc;\n    function transpileConstructor(_) {\n        const { fun } = _;\n        const funAst = (context_1.verifyResults.constructorHasSuper(_) ?\n            transpileFun_1.transpileFunBlock(fun, { leadStatements: [esast_constants_1.letLexicalThis], dontDeclareThis: true }) :\n            transpileFun_1.transpileFunBlock(fun, { leadStatements: constructorSetMembers(_) }));\n        return util_3.loc(_, new Class_1.MethodDefinitionConstructor(funAst));\n    }\n    function constructorSetMembers(constructor) {\n        return constructor.memberArgs.map(_ => util_3.loc(_, new Statement_1.ExpressionStatement(new Expression_1.AssignmentExpression('=', util_1.member(esast_constants_1.esThis, _.name), transpileLocals_1.idForDeclareCached(_)))));\n    }\n    function beRecord(fields) {\n        const fieldNames = new Expression_1.ArrayExpression(fields.map(_ => new Literal_1.LiteralString(_.name)));\n        return new Statement_1.ExpressionStatement(ms_1.msCall('beRecord', esast_constants_1.idFocus, fieldNames));\n    }\n    function defaultConstructor(fields, classHasSuper) {\n        const args = fields.map(_ => util_1.identifier(_.name));\n        const opSuper = Op_1.opIf(classHasSuper, () => new Statement_1.ExpressionStatement(new Expression_1.CallExpression(idSuper, [])));\n        const fieldSetters = fields.map((_, i) => new Statement_1.ExpressionStatement(new Expression_1.AssignmentExpression('=', util_1.member(esast_constants_1.esThis, _.name), util_3.maybeWrapInCheckInstance(args[i], _.opType, _.name))));\n        const body = new Statement_1.BlockStatement(util_2.cat(opSuper, fieldSetters, freezeThis));\n        return new Class_1.MethodDefinitionConstructor(new Function_1.FunctionExpression(null, args, body));\n    }\n    const freezeThis = new Statement_1.ExpressionStatement(new Expression_1.CallExpression(new Expression_1.MemberExpressionPlain(new Identifier_1.default('Object'), new Identifier_1.default('freeze')), [esast_constants_1.esThis]));\n    function transpileSuperCallDoNoLoc(_) {\n        const { args } = _;\n        const method = context_1.verifyResults.superCallToMethod.get(_);\n        if (method instanceof Class_2.Constructor) {\n            const call = new Statement_1.ExpressionStatement(new Expression_1.CallExpression(idSuper, args.map(transpileVal_1.default)));\n            const memberSets = constructorSetMembers(method);\n            return util_2.cat(call, memberSets, esast_constants_1.setLexicalThis);\n        }\n        else\n            return new Statement_1.ExpressionStatement(superCall(_, method));\n    }\n    exports.transpileSuperCallDoNoLoc = transpileSuperCallDoNoLoc;\n    function transpileSuperCallValNoLoc(_) {\n        const method = context_1.verifyResults.superCallToMethod.get(_);\n        if (method instanceof Class_2.Constructor)\n            throw new Error();\n        else\n            return superCall(_, method);\n    }\n    exports.transpileSuperCallValNoLoc = transpileSuperCallValNoLoc;\n    function superCall({ args }, method) {\n        return new Expression_1.CallExpression(transpileMemberName_1.transpileMember(idSuper, method.symbol), transpileCall_1.transpileArguments(args));\n    }\n    function transpileSuperMemberNoLoc({ name }) {\n        return transpileMemberName_1.transpileMember(idSuper, name);\n    }\n    exports.transpileSuperMemberNoLoc = transpileSuperMemberNoLoc;\n    const idSuper = new Identifier_1.default('super');\n});\n"],"sourceRoot":"/source/"}