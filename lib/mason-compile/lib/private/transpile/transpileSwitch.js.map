{"version":3,"sources":["private/transpile/transpileSwitch.js"],"names":[],"mappings":"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","file":"private/transpile/transpileSwitch.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Loop', 'esast/lib/Statement', 'op/Op', '../util', './throwErrorFromString', './transpileBlock', './transpileVal', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Loop_1 = require('esast/lib/Loop');\n    const Statement_1 = require('esast/lib/Statement');\n    const Op_1 = require('op/Op');\n    const util_1 = require('../util');\n    const throwErrorFromString_1 = require('./throwErrorFromString');\n    const transpileBlock_1 = require('./transpileBlock');\n    const transpileVal_1 = require('./transpileVal');\n    const util_2 = require('./util');\n    function transpileSwitchValNoLoc(_) {\n        return transpileBlock_1.blockWrapStatement(transpileSwitchVDNoLoc(_, false));\n    }\n    exports.transpileSwitchValNoLoc = transpileSwitchValNoLoc;\n    function transpileSwitchDoNoLoc(_) {\n        return transpileSwitchVDNoLoc(_, true);\n    }\n    exports.transpileSwitchDoNoLoc = transpileSwitchDoNoLoc;\n    function transpileSwitchVDNoLoc({ switched, parts, opElse }, isDo) {\n        const partAsts = util_1.flatMap(parts, _ => transpileSwitchPart(_, isDo));\n        partAsts.push(Op_1.caseOp(opElse, _ => util_2.loc(_, new Statement_1.SwitchCase(null, transpileBlock_1.default(_).body)), () => switchCaseNoMatch));\n        return new Statement_1.SwitchStatement(transpileVal_1.default(switched), partAsts);\n    }\n    function transpileSwitchPart(_, isDo) {\n        const { values, result } = _;\n        const follow = Op_1.opIf(isDo, () => new Loop_1.BreakStatement);\n        const block = transpileBlock_1.default(result, { follow: follow });\n        const cases = [];\n        for (let i = 0; i < values.length - 1; i = i + 1)\n            cases.push(util_2.loc(_, new Statement_1.SwitchCase(transpileVal_1.default(values[i]), [])));\n        cases.push(util_2.loc(_, new Statement_1.SwitchCase(transpileVal_1.default(values[values.length - 1]), [block])));\n        return cases;\n    }\n    const switchCaseNoMatch = new Statement_1.SwitchCase(null, [throwErrorFromString_1.default('No branch of `switch` matches.')]);\n});\n"],"sourceRoot":"/source/"}