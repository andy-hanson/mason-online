{"version":3,"sources":["private/transpile/transpileModule.js"],"names":[],"mappings":"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","file":"private/transpile/transpileModule.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Declaration', 'esast/lib/Expression', 'esast/lib/Function', 'esast/lib/Identifier', 'esast/lib/Literal', 'esast/lib/Program', 'esast/lib/Statement', 'esast-create-util/lib/util', 'op/Op', '../context', '../manglePath', '../ast/locals', '../ast/Module', '../util', './context', './esast-constants', './ms', './transpileLocals', './transpileVal', './util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Declaration_1 = require('esast/lib/Declaration');\n    const Expression_1 = require('esast/lib/Expression');\n    const Function_1 = require('esast/lib/Function');\n    const Identifier_1 = require('esast/lib/Identifier');\n    const Literal_1 = require('esast/lib/Literal');\n    const Program_1 = require('esast/lib/Program');\n    const Statement_1 = require('esast/lib/Statement');\n    const util_1 = require('esast-create-util/lib/util');\n    const Op_1 = require('op/Op');\n    const context_1 = require('../context');\n    const manglePath_1 = require('../manglePath');\n    const locals_1 = require('../ast/locals');\n    const Module_1 = require('../ast/Module');\n    const util_2 = require('../util');\n    const context_2 = require('./context');\n    const esast_constants_1 = require('./esast-constants');\n    const ms_1 = require('./ms');\n    const transpileLocals_1 = require('./transpileLocals');\n    const transpileVal_1 = require('./transpileVal');\n    const util_3 = require('./util');\n    function transpileModule(_) {\n        const { doImports, lines } = _;\n        const body = moduleBody(context_2.verifyResults.moduleKind, lines);\n        if (context_1.compileOptions.noModuleBoilerplate)\n            return new Program_1.Script(body);\n        const amd = amdWrapModule(doImports, transpiledImports(_), body);\n        return util_3.loc(_, new Program_1.Script(util_2.cat(Op_1.opIf(context_1.compileOptions.useStrict, () => useStrict), Op_1.opIf(context_1.compileOptions.includeAmdefine, () => amdefineHeader), amd)));\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = transpileModule;\n    function transpiledImports(_) {\n        const { imports } = _;\n        const res = imports.filter(_ => _.path !== 'global');\n        for (const [path, imported] of context_2.verifyResults.builtinPathToNames)\n            if (path !== 'global') {\n                const importedDeclares = [];\n                let opImportDefault = null;\n                const defaultName = util_2.last(path.split('/'));\n                for (const name of imported) {\n                    const declare = locals_1.LocalDeclare.plain(_.loc, name);\n                    if (name === defaultName)\n                        opImportDefault = declare;\n                    else\n                        importedDeclares.push(declare);\n                }\n                res.push(new Module_1.Import(_.loc, path, importedDeclares, opImportDefault));\n            }\n        return res;\n    }\n    function moduleBody(kind, lines) {\n        switch (kind) {\n            case 0:\n            case 2:\n                return util_3.transpileLines(lines);\n            case 1:\n                const dos = util_3.transpileLines(util_2.rtail(lines));\n                const val = transpileVal_1.default(util_2.last(lines));\n                if (context_1.compileOptions.noModuleBoilerplate)\n                    return util_2.cat(dos, new Statement_1.ExpressionStatement(val));\n                else\n                    return util_2.cat(dos, new Statement_1.ExpressionStatement(exportDefault(val)));\n            case 3:\n            case 4: {\n                const declare = kind === 3 ? esast_constants_1.declareBuiltBag : esast_constants_1.declareBuiltMap;\n                const dos = util_3.transpileLines(lines);\n                if (context_1.compileOptions.noModuleBoilerplate)\n                    return util_2.cat(declare, dos);\n                else\n                    return util_2.cat(declare, dos, new Statement_1.ExpressionStatement(exportDefault(esast_constants_1.idBuilt)));\n            }\n            default:\n                throw new Error(String(context_2.verifyResults.moduleKind));\n        }\n    }\n    function exportNamedOrDefault(val, name) {\n        return name === context_1.pathOptions.moduleName ?\n            exportDefault(val) :\n            exportNamed(val, name);\n    }\n    exports.exportNamedOrDefault = exportNamedOrDefault;\n    function exportNamed(val, name) {\n        return new Expression_1.AssignmentExpression('=', util_1.member(idExports, name), val);\n    }\n    function exportDefault(val) {\n        return new Expression_1.AssignmentExpression('=', exportsDefault, val);\n    }\n    function amdWrapModule(doImports, imports, body) {\n        const shouldImportBoot = context_1.compileOptions.importBoot;\n        const allImports = doImports.concat(imports);\n        const allImportPaths = allImports.map(_ => manglePath_1.default(_.path));\n        const arrImportPaths = new Expression_1.ArrayExpression(util_2.cat(litStrExports, Op_1.opIf(shouldImportBoot, () => new Literal_1.LiteralString(context_1.compileOptions.bootPath)), allImportPaths.map(_ => new Literal_1.LiteralString(_))));\n        const importToIdentifier = new Map();\n        const importIdentifiers = [];\n        for (let i = 0; i < allImports.length; i = i + 1) {\n            const _ = allImports[i];\n            const id = util_1.identifier(`${pathBaseName(_.path)}_${i}`);\n            importIdentifiers.push(id);\n            importToIdentifier.set(_, id);\n        }\n        function getIdentifier(_) {\n            return importToIdentifier.get(_);\n        }\n        const importArgs = util_2.cat(idExports, Op_1.opIf(shouldImportBoot, () => idBoot), importIdentifiers);\n        const doBoot = Op_1.opIf(shouldImportBoot, () => new Statement_1.ExpressionStatement(ms_1.msCall('getModule', idBoot)));\n        const importDos = doImports.map(_ => util_3.loc(_, new Statement_1.ExpressionStatement(ms_1.msCall('getModule', getIdentifier(_)))));\n        const opDeclareImportedLocals = Op_1.opIf(!util_2.isEmpty(imports), () => new Declaration_1.VariableDeclarationLet(util_2.flatMap(imports, _ => importDeclarators(_, getIdentifier(_)))));\n        const fullBody = new Statement_1.BlockStatement(util_2.cat(doBoot, importDos, opDeclareImportedLocals, body, returnExports));\n        const lazyBody = context_1.compileOptions.lazyModules ?\n            new Statement_1.BlockStatement([new Statement_1.ExpressionStatement(new Expression_1.AssignmentExpression('=', exportsGet, ms_1.msCall('lazy', new Function_1.ArrowFunctionExpression([], fullBody))))]) :\n            fullBody;\n        return new Statement_1.ExpressionStatement(new Expression_1.CallExpression(idDefine, [arrImportPaths, new Function_1.ArrowFunctionExpression(importArgs, lazyBody)]));\n    }\n    function pathBaseName(path) {\n        return path.substr(path.lastIndexOf('/') + 1);\n    }\n    function importDeclarators({ imported, opImportDefault }, moduleIdentifier) {\n        const isLazy = (util_2.isEmpty(imported) ? opImportDefault : imported[0]).isLazy;\n        const value = ms_1.msCall(isLazy ? 'lazyGetModule' : 'getModule', moduleIdentifier);\n        const importedDefault = Op_1.opMap(opImportDefault, def => {\n            const defexp = ms_1.msCall('getDefaultExport', moduleIdentifier);\n            const val = isLazy ? util_3.lazyWrap(defexp) : defexp;\n            return util_3.loc(def, new Declaration_1.VariableDeclarator(transpileLocals_1.idForDeclareCached(def), val));\n        });\n        const importedDestruct = util_2.isEmpty(imported) ? null :\n            transpileLocals_1.makeDestructureDeclarators(imported, isLazy, value, true);\n        return util_2.cat(importedDefault, importedDestruct);\n    }\n    const idBoot = new Identifier_1.default('_boot');\n    const idDefine = new Identifier_1.default('define');\n    const idExports = new Identifier_1.default('exports');\n    const exportsGet = util_1.member(idExports, '_get');\n    const litStrExports = new Literal_1.LiteralString('exports');\n    const returnExports = new Statement_1.ReturnStatement(idExports);\n    const useStrict = new Statement_1.ExpressionStatement(new Literal_1.LiteralString('use strict'));\n    const amdefineHeader = new Statement_1.IfStatement(new Expression_1.BinaryExpression('!==', new Expression_1.UnaryExpression('typeof', idDefine), new Literal_1.LiteralString('function')), new Declaration_1.VariableDeclarationVar([\n        new Declaration_1.VariableDeclarator(idDefine, new Expression_1.CallExpression(new Expression_1.CallExpression(new Identifier_1.default('require'), [new Literal_1.LiteralString('amdefine')]), [new Identifier_1.default('module')]))]));\n    const exportsDefault = util_1.member(idExports, 'default');\n});\n"],"sourceRoot":"/source/"}