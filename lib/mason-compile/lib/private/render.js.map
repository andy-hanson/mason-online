{"version":3,"sources":["private/render.js","private/render.ts"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAV,EAAmB;AAChB,QAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,OAAO,OAAO,OAAP,KAAmB,QAA1B,EAAoC;AAClE,YAAI,IAAI,QAAQ,OAAR,EAAiB,OAAjB,CAAJ,CAD8D,IAC3B,MAAM,SAAN,EAAiB,OAAO,OAAP,GAAiB,CAAjB,CAArB;KADvC,MAGK,IAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAP,EAAY;AACjD,eAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,8BAAvB,EAAuD,WAAvD,CAAP,EAA4E,OAA5E,EADiD;KAAhD;CAJR,CAAD,CAOG,UAAU,OAAV,EAAmB,OAAnB,EAA4B;AAC3B,iBAD2B;;ACN/B,UAAA,WAAA,QAA4C,8BAA5C,CAAA,CDM+B;ACL/B,UAAA,YAAA,QAA0C,WAA1C,CAAA,CDK+B;ACF/B,aAAA,MAAA,CAA+B,KAA/B,EAA0C;AACzC,eAAO,UAAA,cAAA,CAAe,gBAAf,GACN,SAAA,mBAAA,CAAoB,KAApB,EAA2B,UAAA,WAAA,CAAY,UAAZ,EAAwB,CAAA,EAAA,GAAK,UAAA,WAAA,CAAY,UAAZ,EAAsB,CAA9E,CADM,GAEN,EAAC,MAAM,SAAA,OAAA,CAAS,KAAT,CAAN,EAAuB,WAAW,EAAX,EAFlB,CADkC;KAA1C;AAAA,WAAA,cAAA,CAAA,OAAA,EAAA,YAAA,EAAA,EAAA,OAAA,IAAA,EAAA,EDE+B;AAU3B,YAAQ,OAAR,GAAkB,MAAlB,CAV2B;CAA5B,CAPH","file":"private/render.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast-render-fast/lib/render', './context'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const render_1 = require('esast-render-fast/lib/render');\n    const context_1 = require('./context');\n    function render(esAst) {\n        return context_1.compileOptions.includeSourceMap ?\n            render_1.renderWithSourceMap(esAst, context_1.pathOptions.modulePath, `./${context_1.pathOptions.jsBaseName}`) :\n            { code: render_1.default(esAst), sourceMap: '' };\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = render;\n});\n","import Node from 'esast/lib/Node'\nimport esRender, {renderWithSourceMap} from 'esast-render-fast/lib/render'\nimport {compileOptions, pathOptions} from './context'\n\n/** Renders the transpiled Ast. */\nexport default function render(esAst: Node): {code: string, sourceMap: string} {\n\treturn compileOptions.includeSourceMap ?\n\t\trenderWithSourceMap(esAst, pathOptions.modulePath, `./${pathOptions.jsBaseName}`) :\n\t\t{code: esRender(esAst), sourceMap: ''}\n}\n"],"sourceRoot":"/source/"}