{"version":3,"sources":["private/lex/lexPlain.js"],"names":[],"mappings":"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","file":"private/lex/lexPlain.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Loc', '../context', '../token/Group', '../token/Keyword', '../token/Token', '../util', './chars', './groupContext', './lexName', './lexQuote', './sourceContext'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Loc_1 = require('esast/lib/Loc');\n    const context_1 = require('../context');\n    const Group_1 = require('../token/Group');\n    const Keyword_1 = require('../token/Keyword');\n    const Token_1 = require('../token/Token');\n    const util_1 = require('../util');\n    const chars_1 = require('./chars');\n    const groupContext_1 = require('./groupContext');\n    const lexName_1 = require('./lexName');\n    const lexQuote_1 = require('./lexQuote');\n    const sourceContext_1 = require('./sourceContext');\n    function lexPlain(isInQuote) {\n        let indent = 0;\n        let startColumn;\n        function startPos() {\n            return new Loc_1.Pos(sourceContext_1.line, startColumn);\n        }\n        function loc() {\n            return new Loc_1.default(startPos(), sourceContext_1.pos());\n        }\n        function keyword(kind) {\n            groupContext_1.addToCurrentGroup(new Keyword_1.KeywordPlain(loc(), kind));\n        }\n        function funKeyword(opts) {\n            const options = {\n                isDo: Boolean(opts.isDo),\n                isThisFun: Boolean(opts.isThisFun),\n                kind: 'kind' in opts ? opts.kind : 0\n            };\n            groupContext_1.addToCurrentGroup(new Keyword_1.KeywordFun(loc(), options));\n            groupContext_1.space(loc());\n        }\n        function eatAndAddNumber() {\n            const startIndex = sourceContext_1.index - 1;\n            sourceContext_1.tryEat(45);\n            if (sourceContext_1.peek(-1) === 48) {\n                const p = sourceContext_1.peek();\n                switch (p) {\n                    case 98:\n                    case 111:\n                    case 120: {\n                        sourceContext_1.skip();\n                        const isDigitSpecial = p === 98 ?\n                            chars_1.isDigitBinary :\n                            p === 111 ?\n                                chars_1.isDigitOctal :\n                                chars_1.isDigitHex;\n                        sourceContext_1.skipWhile(isDigitSpecial);\n                        break;\n                    }\n                    case 46:\n                        if (chars_1.isDigitDecimal(sourceContext_1.peek(1))) {\n                            sourceContext_1.skip();\n                            sourceContext_1.skipWhile(chars_1.isDigitDecimal);\n                        }\n                        break;\n                    default:\n                }\n            }\n            else {\n                sourceContext_1.skipWhile(chars_1.isDigitDecimal);\n                if (sourceContext_1.peek() === 46 && chars_1.isDigitDecimal(sourceContext_1.peek(1))) {\n                    sourceContext_1.skip();\n                    sourceContext_1.skipWhile(chars_1.isDigitDecimal);\n                }\n            }\n            const str = sourceContext_1.sourceString.slice(startIndex, sourceContext_1.index);\n            groupContext_1.addToCurrentGroup(new Token_1.NumberToken(loc(), str));\n        }\n        function eatIndent() {\n            const optIndent = context_1.compileOptions.indent;\n            if (typeof optIndent === 'number') {\n                const spaces = sourceContext_1.skipWhileEquals(32);\n                context_1.check(spaces % optIndent === 0, sourceContext_1.pos, _ => _.badSpacedIndent(optIndent));\n                return spaces / optIndent;\n            }\n            else {\n                const indent = sourceContext_1.skipWhileEquals(9);\n                context_1.check(sourceContext_1.peek() !== 32, sourceContext_1.pos, _ => _.noLeadingSpace);\n                return indent;\n            }\n        }\n        function handleName() {\n            lexName_1.default(startPos(), false);\n        }\n        while (true) {\n            startColumn = sourceContext_1.column;\n            const characterEaten = sourceContext_1.eat();\n            switch (characterEaten) {\n                case 0:\n                    return;\n                case 96:\n                case 34:\n                    lexQuote_1.default(indent, characterEaten === 96);\n                    break;\n                case 40:\n                case 91:\n                case 123:\n                    const [ctr, close] = (() => {\n                        switch (characterEaten) {\n                            case 40:\n                                return [Group_1.GroupParenthesis, 41];\n                            case 91:\n                                return [Group_1.GroupBracket, 93];\n                            case 123:\n                                return [Group_1.GroupBrace, 125];\n                            default:\n                                throw new Error(String(characterEaten));\n                        }\n                    })();\n                    if (sourceContext_1.tryEat(close))\n                        groupContext_1.addToCurrentGroup(new ctr(loc(), []));\n                    else {\n                        groupContext_1.openGroup(startPos(), ctr);\n                        groupContext_1.openGroup(sourceContext_1.pos(), Group_1.GroupSpace);\n                    }\n                    break;\n                case 41:\n                    if (groupContext_1.closeInterpolationOrParenthesis(loc())) {\n                        util_1.assert(isInQuote);\n                        return;\n                    }\n                    break;\n                case 93:\n                case 125: {\n                    const ctr = characterEaten === 93 ? Group_1.GroupBracket : Group_1.GroupBrace;\n                    groupContext_1.closeGroup(startPos(), Group_1.GroupSpace);\n                    groupContext_1.closeGroup(sourceContext_1.pos(), ctr);\n                    break;\n                }\n                case 32:\n                    groupContext_1.space(loc());\n                    break;\n                case 10: {\n                    context_1.check(!isInQuote, loc, _ => _.noNewlineInInterpolation);\n                    if (sourceContext_1.peek(-2) === 32)\n                        context_1.warn(sourceContext_1.pos(), _ => _.trailingSpace);\n                    sourceContext_1.skipNewlines();\n                    const oldIndent = indent;\n                    indent = eatIndent();\n                    if (indent > oldIndent) {\n                        context_1.check(indent === oldIndent + 1, loc, _ => _.tooMuchIndent);\n                        const l = loc();\n                        if (util_1.isEmpty(groupContext_1.curGroup.subTokens) ||\n                            !Keyword_1.isKeyword(51, util_1.last(groupContext_1.curGroup.subTokens))) {\n                            if (groupContext_1.curGroup instanceof Group_1.GroupSpace)\n                                groupContext_1.closeSpaceOKIfEmpty(l.start);\n                            groupContext_1.openGroup(l.end, Group_1.GroupSpace);\n                        }\n                        groupContext_1.openGroup(l.start, Group_1.GroupBlock);\n                        groupContext_1.openLine(l.end);\n                    }\n                    else {\n                        const l = loc();\n                        for (let i = indent; i < oldIndent; i = i + 1)\n                            groupContext_1.closeGroupsForDedent(l.start);\n                        groupContext_1.closeLine(l.start);\n                        groupContext_1.openLine(l.end);\n                    }\n                    break;\n                }\n                case 9:\n                    throw context_1.fail(loc(), _ => _.nonLeadingTab);\n                case 33:\n                    if (sourceContext_1.tryEat(92))\n                        funKeyword({ isDo: true });\n                    else\n                        handleName();\n                    break;\n                case 36:\n                    if (sourceContext_1.tryEat2(33, 92))\n                        funKeyword({ isDo: true, kind: 1 });\n                    else if (sourceContext_1.tryEat(92))\n                        funKeyword({ kind: 1 });\n                    else\n                        handleName();\n                    break;\n                case 42:\n                    if (sourceContext_1.tryEat2(33, 92))\n                        funKeyword({ isDo: true, kind: 2 });\n                    else if (sourceContext_1.tryEat(92))\n                        funKeyword({ kind: 2 });\n                    else\n                        handleName();\n                    break;\n                case 92:\n                    funKeyword({});\n                    break;\n                case 124:\n                    const isDocComment = !sourceContext_1.tryEat(124);\n                    if (!(sourceContext_1.tryEat(32) || sourceContext_1.tryEat(9) || sourceContext_1.peek() === 10))\n                        context_1.warn(sourceContext_1.pos(), _ => _.commentNeedsSpace);\n                    if (isDocComment) {\n                        const text = sourceContext_1.eatRestOfLine();\n                        groupContext_1.closeSpaceOKIfEmpty(startPos());\n                        context_1.check(groupContext_1.curGroup instanceof Group_1.GroupLine && groupContext_1.curGroup.subTokens.length === 0, loc, _ => _.trailingDocComment);\n                        groupContext_1.addToCurrentGroup(new Token_1.DocComment(loc(), text));\n                    }\n                    else\n                        sourceContext_1.skipRestOfLine();\n                    break;\n                case 45:\n                    if (chars_1.isDigitDecimal(sourceContext_1.peek()))\n                        eatAndAddNumber();\n                    else\n                        handleName();\n                    break;\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    eatAndAddNumber();\n                    break;\n                case 46:\n                    if (sourceContext_1.peek() === 32 || sourceContext_1.peek() === 10) {\n                        groupContext_1.closeSpaceOKIfEmpty(startPos());\n                        keyword(23);\n                    }\n                    else if (sourceContext_1.peek() === 125) {\n                        groupContext_1.closeSpaceOKIfEmpty(startPos());\n                        keyword(23);\n                        groupContext_1.openGroup(sourceContext_1.pos(), Group_1.GroupSpace);\n                    }\n                    else if (sourceContext_1.tryEat(92))\n                        funKeyword({ isThisFun: true });\n                    else if (sourceContext_1.tryEat2(33, 92))\n                        funKeyword({ isDo: true, isThisFun: true });\n                    else if (sourceContext_1.tryEat2(42, 92))\n                        funKeyword({ isThisFun: true, kind: 2 });\n                    else if (sourceContext_1.tryEat3(42, 33, 92))\n                        funKeyword({ isDo: true, isThisFun: true, kind: 2 });\n                    else if (sourceContext_1.tryEat2(36, 92))\n                        funKeyword({ isThisFun: true, kind: 1 });\n                    else if (sourceContext_1.tryEat3(36, 33, 92))\n                        funKeyword({ isDo: true, isThisFun: true, kind: 1 });\n                    else if (sourceContext_1.tryEat(46))\n                        if (sourceContext_1.tryEat(46))\n                            keyword(27);\n                        else\n                            keyword(42);\n                    else\n                        keyword(41);\n                    break;\n                case 58:\n                    if (sourceContext_1.tryEat(61))\n                        keyword(21);\n                    else\n                        keyword(38);\n                    break;\n                case 39:\n                    keyword(58);\n                    break;\n                case 126:\n                    keyword(51);\n                    break;\n                case 38:\n                    keyword(34);\n                    break;\n                case 92:\n                case 94:\n                case 125:\n                case 44:\n                case 35:\n                case 123:\n                case 59:\n                    throw context_1.fail(loc(), _ => _.reservedChar(characterEaten));\n                default:\n                    handleName();\n            }\n        }\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = lexPlain;\n});\n"],"sourceRoot":"/source/"}