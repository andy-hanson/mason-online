{"version":3,"sources":["private/verify/verifyCase.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAV,EAAmB;AAChB,QAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,OAAO,OAAO,OAAP,KAAmB,QAA1B,EAAoC;AAClE,YAAI,IAAI,QAAQ,OAAR,EAAiB,OAAjB,CAAJ,CAD8D,IAC3B,MAAM,SAAN,EAAiB,OAAO,OAAP,GAAiB,CAAjB,CAArB;KADvC,MAGK,IAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAP,EAAY;AACjD,eAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,EAAgC,aAAhC,EAA+C,WAA/C,EAA4D,eAA5D,EAA6E,YAA7E,EAA2F,gBAA3F,EAA6G,aAA7G,CAAP,EAAoI,OAApI,EADiD;KAAhD;CAJR,CAAD,CAOG,UAAU,OAAV,EAAmB,OAAnB,EAA4B;AAC3B,iBAD2B;;AAE3B,UAAM,OAAO,QAAQ,OAAR,CAAP,CAFqB;AAG3B,UAAM,SAAS,QAAQ,aAAR,CAAT,CAHqB;AAI3B,UAAM,YAAY,QAAQ,WAAR,CAAZ,CAJqB;AAK3B,UAAM,gBAAgB,QAAQ,eAAR,CAAhB,CALqB;AAM3B,UAAM,aAAa,QAAQ,YAAR,CAAb,CANqB;AAO3B,UAAM,iBAAiB,QAAQ,gBAAR,CAAjB,CAPqB;AAQ3B,UAAM,cAAc,QAAQ,aAAR,CAAd,CARqB;AAS3B,aAAS,UAAT,OAAgD,EAAhD,EAAoD;YAA9B,uBAA8B;YAArB,mBAAqB;YAAd,qBAAc;;AAChD,kBAAU,aAAV,CAAwB,EAAxB,EAA4B,MAAM;AAC9B,kBAAM,OAAO,MAAM;AACf,qBAAK,MAAM,CAAN,IAAW,KAAhB,EACI,eAAe,CAAf,EAAkB,EAAlB,EADJ;AAEA,qBAAK,MAAL,CAAY,MAAZ,EAAoB,KAAK,cAAc,aAAd,CAA4B,CAA5B,EAA+B,EAA/B,CAAL,CAApB,CAHe;aAAN,CADiB;AAM9B,iBAAK,MAAL,CAAY,OAAZ,EAAqB,KAAK;AACtB,2BAAW,OAAX,CAAmB,CAAnB,EADsB;AAEtB,+BAAe,kBAAf,CAAkC,EAAE,QAAF,EAAY,IAA9C,EAFsB;aAAL,EAGlB,IAHH,EAN8B;SAAN,CAA5B,CADgD;KAApD;AAaA,WAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C,EAAE,OAAO,IAAP,EAA/C,EAtB2B;AAuB3B,YAAQ,OAAR,GAAkB,UAAlB,CAvB2B;AAwB3B,aAAS,cAAT,QAA0C,EAA1C,EAA8C;YAApB,kBAAoB;YAAd,sBAAc;;AAC1C,YAAI,gBAAgB,OAAO,OAAP,EAAgB;AAChC,wBAAY,OAAZ,CAAoB,KAAK,IAAL,CAApB,CADgC;AAEhC,wBAAY,OAAZ,CAAoB,KAAK,SAAL,CAApB,CAFgC;AAGhC,2BAAe,mBAAf,CAAmC,KAAK,MAAL,EAAa,MAAM,cAAc,aAAd,CAA4B,MAA5B,EAAoC,EAApC,CAAN,CAAhD,CAHgC;SAApC,MAKK;AACD,wBAAY,OAAZ,CAAoB,IAApB,EADC;AAED,0BAAc,aAAd,CAA4B,MAA5B,EAAoC,EAApC,EAFC;SALL;KADJ;CAxBD,CAPH","file":"private/verify/verifyCase.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', '../ast/Case', './context', './verifyBlock', './verifyDo', './verifyLocals', './verifyVal'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Op_1 = require('op/Op');\n    const Case_1 = require('../ast/Case');\n    const context_1 = require('./context');\n    const verifyBlock_1 = require('./verifyBlock');\n    const verifyDo_1 = require('./verifyDo');\n    const verifyLocals_1 = require('./verifyLocals');\n    const verifyVal_1 = require('./verifyVal');\n    function verifyCase({ opCased, parts, opElse }, sk) {\n        context_1.withIifeIfVal(sk, () => {\n            const doIt = () => {\n                for (const _ of parts)\n                    verifyCasePart(_, sk);\n                Op_1.opEach(opElse, _ => verifyBlock_1.verifyBlockSK(_, sk));\n            };\n            Op_1.caseOp(opCased, _ => {\n                verifyDo_1.default(_);\n                verifyLocals_1.verifyAndPlusLocal(_.assignee, doIt);\n            }, doIt);\n        });\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = verifyCase;\n    function verifyCasePart({ test, result }, sk) {\n        if (test instanceof Case_1.Pattern) {\n            verifyVal_1.default(test.type);\n            verifyVal_1.default(test.patterned);\n            verifyLocals_1.verifyAndPlusLocals(test.locals, () => verifyBlock_1.verifyBlockSK(result, sk));\n        }\n        else {\n            verifyVal_1.default(test);\n            verifyBlock_1.verifyBlockSK(result, sk);\n        }\n    }\n});\n"],"sourceRoot":"/source/"}