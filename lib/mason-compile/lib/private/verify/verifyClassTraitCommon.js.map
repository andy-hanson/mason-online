{"version":3,"sources":["private/verify/verifyClassTraitCommon.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAV,EAAmB;AAChB,QAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,OAAO,OAAO,OAAP,KAAmB,QAA1B,EAAoC;AAClE,YAAI,IAAI,QAAQ,OAAR,EAAiB,OAAjB,CAAJ,CAD8D,IAC3B,MAAM,SAAN,EAAiB,OAAO,OAAP,GAAiB,CAAjB,CAArB;KADvC,MAGK,IAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAP,EAAY;AACjD,eAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,EAAgC,yBAAhC,EAA2D,WAA3D,EAAwE,QAAxE,EAAkF,eAAlF,EAAmG,aAAnG,EAAkH,gBAAlH,EAAoI,oBAApI,CAAP,EAAkK,OAAlK,EADiD;KAAhD;CAJR,CAAD,CAOG,UAAU,OAAV,EAAmB,OAAnB,EAA4B;AAC3B,iBAD2B;;AAE3B,UAAM,OAAO,QAAQ,OAAR,CAAP,CAFqB;AAG3B,UAAM,qBAAqB,QAAQ,yBAAR,CAArB,CAHqB;AAI3B,UAAM,YAAY,QAAQ,WAAR,CAAZ,CAJqB;AAK3B,UAAM,SAAS,QAAQ,QAAR,CAAT,CALqB;AAM3B,UAAM,gBAAgB,QAAQ,eAAR,CAAhB,CANqB;AAO3B,UAAM,cAAc,QAAQ,aAAR,CAAd,CAPqB;AAQ3B,UAAM,iBAAiB,QAAQ,gBAAR,CAAjB,CARqB;AAS3B,UAAM,qBAAqB,QAAQ,oBAAR,CAArB,CATqB;AAU3B,aAAS,oBAAT,CAA8B,CAA9B,EAAiC;AAC7B,iBAAS,IAAT,CAAc,QAAd,EAAwB;AACpB,+BAAmB,OAAnB,CAA2B,EAAE,MAAF,CAA3B,CADoB;AAEpB,sBAAU,UAAV,CAAqB,CAArB,EAAwB,QAAxB,EAFoB;SAAxB;AAIA,YAAI,aAAa,mBAAmB,UAAnB,EAA+B;kBACpC,MAAQ,EAAR,IADoC;;AAE5C,iBAAK,MAAM;AACP,uBAAO,eAAP,CAAuB,KAAK,OAAL,CAAa,IAAI,aAAJ,CAApC,EADO;AAEP,4BAAY,cAAZ,CAA2B,GAA3B,EAFO;aAAN,CAAL,CAF4C;SAAhD,MAOK,IAAI,aAAa,mBAAmB,YAAnB,EAAiC;kBAC3C,cAAuB,EAAvB,YAD2C;kBAC9B,QAAU,EAAV,MAD8B;;AAEnD,iBAAK,MAAM;AACP,uBAAO,eAAP,CAAuB,WAAvB,EADO;AAEP,+BAAe,mBAAf,CAAmC,CAAC,WAAD,CAAnC,EAAkD,MAAM;AACpD,kCAAc,cAAd,CAA6B,KAA7B,EADoD;iBAAN,CAAlD,CAFO;aAAN,CAAL,CAFmD;SAAlD,MASA,IAAI,aAAa,mBAAmB,YAAnB,EAAiC;kBAC3C,cAAqC,EAArC,YAD2C;kBAC9B,eAAwB,EAAxB,aAD8B;kBAChB,QAAU,EAAV,MADgB;;AAEnD,iBAAK,MAAM;AACP,+BAAe,mBAAf,CAAmC,CAAC,WAAD,EAAc,YAAd,CAAnC,EAAgE,MAAM;AAClE,kCAAc,aAAd,CAA4B,KAA5B,EADkE;iBAAN,CAAhE,CADO;aAAN,CAAL,CAFmD;SAAlD,MASD,MAAM,IAAI,KAAJ,CAAU,EAAE,WAAF,CAAc,IAAd,CAAhB,CATC;KArBT;AAgCA,YAAQ,oBAAR,GAA+B,oBAA/B,CA1C2B;AA2C3B,aAAS,kBAAT,OAAqD;YAAvB,iCAAuB;YAAT,mBAAS;;AACjD,kBAAU,QAAV,CAAmB,MAAM;AACrB,2BAAe,kBAAf,CAAkC,YAAlC,EAAgD,MAAM,cAAc,aAAd,CAA4B,KAA5B,CAAN,CAAhD,CADqB;SAAN,CAAnB,CADiD;KAArD;AAKA,YAAQ,kBAAR,GAA6B,kBAA7B,CAhD2B;CAA5B,CAPH","file":"private/verify/verifyClassTraitCommon.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', '../ast/classTraitCommon', './context', './util', './verifyBlock', './verifyFun', './verifyLocals', './verifyMemberName'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Op_1 = require('op/Op');\n    const classTraitCommon_1 = require('../ast/classTraitCommon');\n    const context_1 = require('./context');\n    const util_1 = require('./util');\n    const verifyBlock_1 = require('./verifyBlock');\n    const verifyFun_1 = require('./verifyFun');\n    const verifyLocals_1 = require('./verifyLocals');\n    const verifyMemberName_1 = require('./verifyMemberName');\n    function verifyMethodImplLike(_) {\n        function doit(doVerify) {\n            verifyMemberName_1.default(_.symbol);\n            context_1.withMethod(_, doVerify);\n        }\n        if (_ instanceof classTraitCommon_1.MethodImpl) {\n            const { fun } = _;\n            doit(() => {\n                util_1.makeUseOptional(Op_1.orThrow(fun.opDeclareThis));\n                verifyFun_1.verifyFunBlock(fun);\n            });\n        }\n        else if (_ instanceof classTraitCommon_1.MethodGetter) {\n            const { declareThis, block } = _;\n            doit(() => {\n                util_1.makeUseOptional(declareThis);\n                verifyLocals_1.verifyAndPlusLocals([declareThis], () => {\n                    verifyBlock_1.verifyBlockVal(block);\n                });\n            });\n        }\n        else if (_ instanceof classTraitCommon_1.MethodSetter) {\n            const { declareThis, declareFocus, block } = _;\n            doit(() => {\n                verifyLocals_1.verifyAndPlusLocals([declareThis, declareFocus], () => {\n                    verifyBlock_1.verifyBlockDo(block);\n                });\n            });\n        }\n        else\n            throw new Error(_.constructor.name);\n    }\n    exports.verifyMethodImplLike = verifyMethodImplLike;\n    function verifyClassTraitDo({ declareFocus, block }) {\n        context_1.withIife(() => {\n            verifyLocals_1.verifyAndPlusLocal(declareFocus, () => verifyBlock_1.verifyBlockDo(block));\n        });\n    }\n    exports.verifyClassTraitDo = verifyClassTraitDo;\n});\n"],"sourceRoot":"/source/"}