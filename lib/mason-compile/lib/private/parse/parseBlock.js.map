{"version":3,"sources":["private/parse/parseBlock.js"],"names":[],"mappings":"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","file":"private/parse/parseBlock.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', '../ast/Block', '../context', '../token/Group', './checks', './parseLine', './tryTakeComment', './Slice'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Op_1 = require('op/Op');\n    const Block_1 = require('../ast/Block');\n    const context_1 = require('../context');\n    const Group_1 = require('../token/Group');\n    const checks_1 = require('./checks');\n    const parseLine_1 = require('./parseLine');\n    const tryTakeComment_1 = require('./tryTakeComment');\n    const Slice_1 = require('./Slice');\n    function parseBlock(lineTokens) {\n        const [opComment, rest] = tryTakeComment_1.default(lineTokens);\n        return new Block_1.default(lineTokens.loc, opComment, parseLine_1.parseLines(rest));\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseBlock;\n    function beforeAndBlock(tokens) {\n        const [before, opBlock] = beforeAndOpBlock(tokens);\n        const block = Op_1.orThrow(opBlock, () => context_1.fail(tokens.loc, _ => _.expectedBlock));\n        return [before, block];\n    }\n    exports.beforeAndBlock = beforeAndBlock;\n    function beforeAndOpBlock(tokens) {\n        if (tokens.isEmpty())\n            return [tokens, null];\n        else {\n            const block = tokens.last();\n            return block instanceof Group_1.GroupBlock ? [tokens.rtail(), Slice_1.Lines.of(block)] : [tokens, null];\n        }\n    }\n    exports.beforeAndOpBlock = beforeAndOpBlock;\n    function parseBlockWrap(tokens) {\n        return new Block_1.BlockWrap(tokens.loc, parseBlock(tokens));\n    }\n    exports.parseBlockWrap = parseBlockWrap;\n    function justBlock(keywordKind, tokens) {\n        const [before, block] = beforeAndBlock(tokens);\n        checks_1.checkEmpty(before, _ => _.unexpectedAfterKind(keywordKind));\n        return block;\n    }\n    exports.justBlock = justBlock;\n    function parseJustBlock(keywordKind, tokens) {\n        return parseBlock(justBlock(keywordKind, tokens));\n    }\n    exports.parseJustBlock = parseJustBlock;\n});\n"],"sourceRoot":"/source/"}