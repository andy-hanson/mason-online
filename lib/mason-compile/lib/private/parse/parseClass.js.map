{"version":3,"sources":["private/parse/parseClass.js"],"names":[],"mappings":"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","file":"private/parse/parseClass.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', '../ast/Class', '../ast/Fun', '../context', '../token/Keyword', './parseBlock', './parseExpr', './parseFunBlock', './parseMethodImpls', './parseLocalDeclares', './tryTakeComment'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Op_1 = require('op/Op');\n    const Class_1 = require('../ast/Class');\n    const Fun_1 = require('../ast/Fun');\n    const context_1 = require('../context');\n    const Keyword_1 = require('../token/Keyword');\n    const parseBlock_1 = require('./parseBlock');\n    const parseExpr_1 = require('./parseExpr');\n    const parseFunBlock_1 = require('./parseFunBlock');\n    const parseMethodImpls_1 = require('./parseMethodImpls');\n    const parseLocalDeclares_1 = require('./parseLocalDeclares');\n    const tryTakeComment_1 = require('./tryTakeComment');\n    function parseClass(tokens) {\n        const [before, opBlock] = parseBlock_1.beforeAndOpBlock(tokens);\n        const { opFields, opSuperClass, traits } = parseClassHeader(before);\n        const [opComment, opDo, statics, opConstructor, methods] = Op_1.caseOp(opBlock, _ => {\n            const [opComment, rest] = tryTakeComment_1.default(_);\n            if (rest.isEmpty())\n                return [opComment, null, [], null, []];\n            const [opDo, rest2] = parseMethodImpls_1.opTakeDo(rest);\n            if (rest2.isEmpty())\n                return [opComment, opDo, [], null, []];\n            const [statics, rest3] = parseMethodImpls_1.takeStatics(rest2);\n            if (rest3.isEmpty())\n                return [opComment, opDo, statics, null, []];\n            const [opConstructor, rest4] = opTakeConstructor(rest3);\n            return [opComment, opDo, statics, opConstructor, parseMethodImpls_1.default(rest4)];\n        }, () => [null, null, [], null, []]);\n        return new Class_1.default(tokens.loc, opFields, opSuperClass, traits, opComment, opDo, statics, opConstructor, methods);\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseClass;\n    function parseClassHeader(tokens) {\n        const [fieldsTokens, [extendsTokens, traitTokens]] = tokens.getKeywordSections(44, 15);\n        return {\n            opFields: Op_1.opIf(!fieldsTokens.isEmpty(), () => fieldsTokens.map(_ => {\n                const { name, opType, kind } = parseLocalDeclares_1.parseLocalParts(_);\n                context_1.check(kind === 0, _.loc, _ => _.todoLazyField);\n                return new Class_1.Field(_.loc, name, opType);\n            })),\n            opSuperClass: Op_1.opMap(extendsTokens, parseExpr_1.default),\n            traits: Op_1.caseOp(traitTokens, parseExpr_1.parseExprParts, () => [])\n        };\n    }\n    function opTakeConstructor(tokens) {\n        const line = tokens.headSlice();\n        return Keyword_1.isKeyword(39, line.head()) ?\n            [parseConstructor(line.tail()), tokens.tail()] :\n            [null, tokens];\n    }\n    function parseConstructor(tokens) {\n        const { args, memberArgs, opRestArg, block } = parseFunBlock_1.funArgsAndBlock(tokens, false, true);\n        const fun = new Fun_1.FunBlock(tokens.loc, args, opRestArg, block, { isThisFun: true, isDo: true });\n        return new Class_1.Constructor(tokens.loc, fun, memberArgs);\n    }\n});\n"],"sourceRoot":"/source/"}