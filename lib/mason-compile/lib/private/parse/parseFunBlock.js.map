{"version":3,"sources":["private/parse/parseFunBlock.js"],"names":[],"mappings":"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","file":"private/parse/parseFunBlock.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", '../ast/Block', '../ast/Fun', '../ast/locals', '../ast/Poly', '../token/Group', '../token/Keyword', '../util', './checks', './parseBlock', './parseCase', './parseLocalDeclares', './parsePipe', './parseSpaced', './parseSwitch', './Slice', './tryTakeComment'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Block_1 = require('../ast/Block');\n    const Fun_1 = require('../ast/Fun');\n    const locals_1 = require('../ast/locals');\n    const Poly_1 = require('../ast/Poly');\n    const Group_1 = require('../token/Group');\n    const Keyword_1 = require('../token/Keyword');\n    const util_1 = require('../util');\n    const checks_1 = require('./checks');\n    const parseBlock_1 = require('./parseBlock');\n    const parseCase_1 = require('./parseCase');\n    const parseLocalDeclares_1 = require('./parseLocalDeclares');\n    const parsePipe_1 = require('./parsePipe');\n    const parseSpaced_1 = require('./parseSpaced');\n    const parseSwitch_1 = require('./parseSwitch');\n    const Slice_1 = require('./Slice');\n    const tryTakeComment_1 = require('./tryTakeComment');\n    function parseFunBlock({ isThisFun, isDo, kind }, tokens) {\n        const [opReturnType, rest] = tryTakeReturnType(tokens);\n        const { args, opRestArg, block } = funArgsAndBlock(rest, !isDo);\n        return new Fun_1.FunBlock(tokens.loc, args, opRestArg, block, { kind: kind, isThisFun: isThisFun, isDo: isDo, opReturnType: opReturnType });\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseFunBlock;\n    function parsePolyValue({ isThisFun, isDo, kind }, tokens) {\n        const [opReturnType, rest] = tryTakeReturnType(tokens);\n        const [before, blockLines] = parseBlock_1.beforeAndBlock(rest);\n        const [opComment, restLines] = tryTakeComment_1.default(blockLines);\n        if (restLines.size() === 1) {\n            const h = restLines.headSlice();\n            if (h.size() === 1 && Keyword_1.isKeyword(33, h.head())) {\n                const { args, opRestArg } = parseFunLocals(before);\n                return new Poly_1.FunAbstract(tokens.loc, args, opRestArg, opReturnType, opComment);\n            }\n        }\n        const { args, opRestArg, block } = funArgsAndBlock(rest, !isDo);\n        return new Fun_1.FunBlock(tokens.loc, args, opRestArg, block, { kind: kind, isThisFun: isThisFun, isDo: isDo, opReturnType: opReturnType });\n    }\n    exports.parsePolyValue = parsePolyValue;\n    function funArgsAndBlock(tokens, isVal, includeMemberArgs = false) {\n        checks_1.checkNonEmpty(tokens, _ => _.expectedBlock);\n        const h = tokens.head();\n        if (isFunFocusKeyword(h)) {\n            const args = [locals_1.LocalDeclare.focus(h.loc)];\n            const [before, block] = parseBlock_1.beforeAndBlock(tokens.tail());\n            checks_1.checkEmpty(before, _ => _.funFocusArgIsImplicit(h.kind));\n            const parser = (() => {\n                switch (h.kind) {\n                    case 1:\n                        return parseCase_1.parseCaseFun;\n                    case 12:\n                        return parsePipe_1.parsePipeFun;\n                    case 14:\n                        return parseSwitch_1.parseSwitchFun;\n                    default:\n                        throw checks_1.unexpected(h);\n                }\n            })();\n            const expr = parser(tokens.loc, block);\n            return { args: args, opRestArg: null, memberArgs: [], block: new Block_1.default(tokens.loc, null, [expr]) };\n        }\n        else {\n            const [before, blockLines] = parseBlock_1.beforeAndBlock(tokens);\n            const { args, opRestArg, memberArgs } = parseFunLocals(before, includeMemberArgs);\n            const block = parseBlock_1.default(blockLines);\n            return { args: args, opRestArg: opRestArg, memberArgs: memberArgs, block: block };\n        }\n    }\n    exports.funArgsAndBlock = funArgsAndBlock;\n    function isFunFocusKeyword(_) {\n        return _ instanceof Keyword_1.KeywordPlain &&\n            (_.kind === 1 || _.kind === 12 || _.kind === 14);\n    }\n    function tryTakeReturnType(tokens) {\n        if (!tokens.isEmpty()) {\n            const h = tokens.head();\n            if (h instanceof Group_1.GroupSpace && Keyword_1.isKeyword(38, util_1.head(h.subTokens)))\n                return [parseSpaced_1.default(Slice_1.Tokens.of(h).tail()), tokens.tail()];\n        }\n        return [null, tokens];\n    }\n    function parseFunLocals(tokens, includeMemberArgs = false) {\n        if (tokens.isEmpty())\n            return { args: [], memberArgs: [], opRestArg: null };\n        else {\n            let rest = tokens, opRestArg = null;\n            const l = tokens.last();\n            if (l instanceof Group_1.GroupSpace) {\n                const g = Slice_1.Tokens.of(l);\n                if (Keyword_1.isKeyword(27, g.head())) {\n                    rest = tokens.rtail();\n                    opRestArg = parseLocalDeclares_1.parseLocalDeclareFromSpaced(g.tail());\n                }\n            }\n            if (includeMemberArgs) {\n                const { declares: args, memberArgs } = parseLocalDeclares_1.parseLocalDeclaresAndMemberArgs(rest);\n                return { args: args, memberArgs: memberArgs, opRestArg: opRestArg };\n            }\n            else\n                return { args: parseLocalDeclares_1.default(rest), memberArgs: [], opRestArg: opRestArg };\n        }\n    }\n});\n"],"sourceRoot":"/source/"}