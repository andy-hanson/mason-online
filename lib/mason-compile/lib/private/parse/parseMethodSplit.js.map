{"version":3,"sources":["private/parse/parseMethodSplit.js"],"names":[],"mappings":"AAAA,CAAC,UAAU,OAAV,EAAmB;AAChB,QAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,OAAO,OAAO,OAAP,KAAmB,QAA1B,EAAoC;AAClE,YAAI,IAAI,QAAQ,OAAR,EAAiB,OAAjB,CAAJ,CAD8D,IAC3B,MAAM,SAAN,EAAiB,OAAO,OAAP,GAAiB,CAAjB,CAArB;KADvC,MAGK,IAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAP,EAAY;AACjD,eAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,EAAgC,YAAhC,EAA8C,kBAA9C,CAAP,EAA0E,OAA1E,EADiD;KAAhD;CAJR,CAAD,CAOG,UAAU,OAAV,EAAmB,OAAnB,EAA4B;AAC3B,iBAD2B;;AAE3B,UAAM,OAAO,QAAQ,OAAR,CAAP,CAFqB;AAG3B,UAAM,YAAY,QAAQ,YAAR,CAAZ,CAHqB;AAI3B,UAAM,YAAY,QAAQ,kBAAR,CAAZ,CAJqB;AAK3B,aAAS,gBAAT,CAA0B,MAA1B,EAAkC;AAC9B,eAAO,KAAK,MAAL,CAAY,OAAO,WAAP,CAAmB,KAAK,aAAa,UAAU,UAAV,CAAjD,EAAwE,QAAoC;gBAAjC,qBAAiC;gBAArB,eAAJ,GAAyB;gBAAZ,mBAAY;kBACvG,MAAiB,QAAjB,IADuG;kBAClG,UAAY,QAAZ,QADkG;;AAE/G,sBAAU,KAAV,CAAgB,CAAC,QAAQ,SAAR,EAAmB,GAApC,EAAyC,KAAK,EAAE,mBAAF,CAA9C,CAF+G;AAG/G,oBAAQ,SAAR,GAAoB,IAApB,CAH+G;AAI/G,mBAAO,EAAE,QAAQ,MAAR,EAAgB,SAAS,OAAT,EAAkB,OAAO,KAAP,EAA3C,CAJ+G;SAApC,EAK5E,MAAM;AACL,kBAAM,UAAU,IAAV,CAAe,OAAO,GAAP,EAAY,KAAK,EAAE,mBAAF,CAAtC,CADK;SAAN,CALH,CAD8B;KAAlC;AAUA,WAAO,cAAP,CAAsB,OAAtB,EAA+B,YAA/B,EAA6C,EAAE,OAAO,IAAP,EAA/C,EAf2B;AAgB3B,YAAQ,OAAR,GAAkB,gBAAlB,CAhB2B;CAA5B,CAPH","file":"private/parse/parseMethodSplit.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', '../context', '../token/Keyword'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Op_1 = require('op/Op');\n    const context_1 = require('../context');\n    const Keyword_1 = require('../token/Keyword');\n    function parseMethodSplit(tokens) {\n        return Op_1.caseOp(tokens.opSplitOnce(_ => _ instanceof Keyword_1.KeywordFun), ({ before, at: atToken, after }) => {\n            const { loc, options } = atToken;\n            context_1.check(!options.isThisFun, loc, _ => _.implicitFunctionDot);\n            options.isThisFun = true;\n            return { before: before, options: options, after: after };\n        }, () => {\n            throw context_1.fail(tokens.loc, _ => _.expectedMethodSplit);\n        });\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseMethodSplit;\n});\n"],"sourceRoot":"/source/"}