{"version":3,"sources":["private/parse/parseFor.js"],"names":[],"mappings":";;AAAA,CAAC,UAAU,OAAV,EAAmB;AAChB,QAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,OAAO,OAAO,OAAP,KAAmB,QAA1B,EAAoC;AAClE,YAAI,IAAI,QAAQ,OAAR,EAAiB,OAAjB,CAAJ,CAD8D,IAC3B,MAAM,SAAN,EAAiB,OAAO,OAAP,GAAiB,CAAjB,CAArB;KADvC,MAGK,IAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAP,EAAY;AACjD,eAAO,CAAC,SAAD,EAAY,SAAZ,EAAuB,OAAvB,EAAgC,eAAhC,EAAiD,aAAjD,EAAgE,YAAhE,EAA8E,kBAA9E,EAAkG,cAAlG,EAAkH,aAAlH,EAAiI,sBAAjI,CAAP,EAAiK,OAAjK,EADiD;KAAhD;CAJR,CAAD,CAOG,UAAU,OAAV,EAAmB,OAAnB,EAA4B;AAC3B,iBAD2B;;AAE3B,UAAM,OAAO,QAAQ,OAAR,CAAP,CAFqB;AAG3B,UAAM,WAAW,QAAQ,eAAR,CAAX,CAHqB;AAI3B,UAAM,SAAS,QAAQ,aAAR,CAAT,CAJqB;AAK3B,UAAM,YAAY,QAAQ,YAAR,CAAZ,CALqB;AAM3B,UAAM,YAAY,QAAQ,kBAAR,CAAZ,CANqB;AAO3B,UAAM,eAAe,QAAQ,cAAR,CAAf,CAPqB;AAQ3B,UAAM,cAAc,QAAQ,aAAR,CAAd,CARqB;AAS3B,UAAM,uBAAuB,QAAQ,sBAAR,CAAvB,CATqB;AAU3B,aAAS,QAAT,CAAkB,MAAlB,EAA0B;oCACE,aAAa,cAAb,CAA4B,MAA5B,EADF;;;;cACf,mCADe;cACP,kCADO;;AAEtB,eAAO,IAAI,OAAO,GAAP,CAAW,OAAO,GAAP,EAAY,gBAAgB,MAAhB,CAA3B,EAAoD,aAAa,OAAb,CAAqB,KAArB,CAApD,CAAP,CAFsB;KAA1B;AAIA,YAAQ,QAAR,GAAmB,QAAnB,CAd2B;AAe3B,aAAS,aAAT,CAAuB,MAAvB,EAA+B;qCACH,aAAa,cAAb,CAA4B,MAA5B,EADG;;;;cACpB,mCADoB;cACZ,kCADY;;AAE3B,eAAO,IAAI,OAAO,QAAP,CAAgB,OAAO,GAAP,EAAY,cAAc,MAAd,CAAhC,EAAuD,aAAa,OAAb,CAAqB,KAArB,CAAvD,CAAP,CAF2B;KAA/B;AAIA,YAAQ,aAAR,GAAwB,aAAxB,CAnB2B;AAoB3B,aAAS,WAAT,CAAqB,MAArB,EAA6B;qCACD,aAAa,cAAb,CAA4B,MAA5B,EADC;;;;cAClB,mCADkB;cACV,kCADU;;AAEzB,eAAO,IAAI,OAAO,MAAP,CAAc,OAAO,GAAP,EAAY,gBAAgB,MAAhB,CAA9B,EAAuD,aAAa,OAAb,CAAqB,KAArB,CAAvD,CAAP,CAFyB;KAA7B;AAIA,YAAQ,WAAR,GAAsB,WAAtB,CAxB2B;AAyB3B,aAAS,eAAT,CAAyB,MAAzB,EAAiC;AAC7B,eAAO,KAAK,IAAL,CAAU,CAAC,OAAO,OAAP,EAAD,EAAmB,MAAM,cAAc,MAAd,CAAN,CAApC,CAD6B;KAAjC;AAGA,aAAS,aAAT,CAAuB,MAAvB,EAA+B;2BACJ,KAAK,MAAL,CAAY,OAAO,WAAP,CAAmB,KAAK,UAAU,SAAV,CAAoB,EAApB,EAAwB,CAAxB,CAAL,CAA/B,EAAiE,QAAuB;gBAApB,qBAAoB;gBAAZ,mBAAY;;AAC3G,sBAAU,KAAV,CAAgB,OAAO,IAAP,OAAkB,CAAlB,EAAqB,OAAO,GAAP,EAAY,KAAK,EAAE,cAAF,CAAtD,CAD2G;AAE3G,mBAAO,CAAC,qBAAqB,2BAArB,CAAiD,MAAjD,EAAyD,CAAzD,CAAD,EAA8D,YAAY,OAAZ,CAAoB,KAApB,CAA9D,CAAP,CAF2G;SAAvB,EAGrF,MAAM,CAAC,SAAS,YAAT,CAAsB,KAAtB,CAA4B,OAAO,GAAP,CAA7B,EAA0C,YAAY,OAAZ,CAAoB,MAApB,CAA1C,CAAN,EAJwB;;;;cACpB,2BADoB;cACX,uBADW;;AAK3B,eAAO,IAAI,OAAO,QAAP,CAAgB,OAAO,GAAP,EAAY,OAAhC,EAAyC,GAAzC,CAAP,CAL2B;KAA/B;CA5BD,CAPH","file":"private/parse/parseFor.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', '../ast/locals', '../ast/Loop', '../context', '../token/Keyword', './parseBlock', './parseExpr', './parseLocalDeclares'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Op_1 = require('op/Op');\n    const locals_1 = require('../ast/locals');\n    const Loop_1 = require('../ast/Loop');\n    const context_1 = require('../context');\n    const Keyword_1 = require('../token/Keyword');\n    const parseBlock_1 = require('./parseBlock');\n    const parseExpr_1 = require('./parseExpr');\n    const parseLocalDeclares_1 = require('./parseLocalDeclares');\n    function parseFor(tokens) {\n        const [before, block] = parseBlock_1.beforeAndBlock(tokens);\n        return new Loop_1.For(tokens.loc, opParseIteratee(before), parseBlock_1.default(block));\n    }\n    exports.parseFor = parseFor;\n    function parseForAsync(tokens) {\n        const [before, block] = parseBlock_1.beforeAndBlock(tokens);\n        return new Loop_1.ForAsync(tokens.loc, parseIteratee(before), parseBlock_1.default(block));\n    }\n    exports.parseForAsync = parseForAsync;\n    function parseForBag(tokens) {\n        const [before, block] = parseBlock_1.beforeAndBlock(tokens);\n        return new Loop_1.ForBag(tokens.loc, opParseIteratee(before), parseBlock_1.default(block));\n    }\n    exports.parseForBag = parseForBag;\n    function opParseIteratee(tokens) {\n        return Op_1.opIf(!tokens.isEmpty(), () => parseIteratee(tokens));\n    }\n    function parseIteratee(tokens) {\n        const [element, bag] = Op_1.caseOp(tokens.opSplitOnce(_ => Keyword_1.isKeyword(53, _)), ({ before, after }) => {\n            context_1.check(before.size() === 1, before.loc, _ => _.todoForPattern);\n            return [parseLocalDeclares_1.parseLocalDeclaresJustNames(before)[0], parseExpr_1.default(after)];\n        }, () => [locals_1.LocalDeclare.focus(tokens.loc), parseExpr_1.default(tokens)]);\n        return new Loop_1.Iteratee(tokens.loc, element, bag);\n    }\n});\n"],"sourceRoot":"/source/"}