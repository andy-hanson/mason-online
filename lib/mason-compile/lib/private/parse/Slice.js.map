{"version":3,"sources":["private/parse/Slice.js"],"names":[],"mappings":"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","file":"private/parse/Slice.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'esast/lib/Loc', 'op/Op', '../token/Keyword', '../util'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Loc_1 = require('esast/lib/Loc');\n    const Op_1 = require('op/Op');\n    const Keyword_1 = require('../token/Keyword');\n    const util_1 = require('../util');\n    class Slice {\n        constructor(tokens, start, end, loc) {\n            this.tokens = tokens;\n            this.start = start;\n            this.end = end;\n            this.loc = loc;\n        }\n        static of(group) {\n            return new this(group.subTokens, 0, group.subTokens.length, group.loc);\n        }\n        size() {\n            return this.end - this.start;\n        }\n        isEmpty() {\n            return this.start === this.end;\n        }\n        head() {\n            return this.tokens[this.start];\n        }\n        second() {\n            return this.tokens[this.start + 1];\n        }\n        last() {\n            return this.tokens[this.end - 1];\n        }\n        nextToLast() {\n            return this.tokens[this.end - 2];\n        }\n        tail() {\n            return this.chopStart(this.start + 1);\n        }\n        rtail() {\n            return this.chopEnd(this.end - 1);\n        }\n        opSplitOnce(splitOn) {\n            for (let i = this.start; i < this.end; i = i + 1) {\n                const token = this.tokens[i];\n                if (splitOn(token))\n                    return {\n                        before: this.chopEnd(i),\n                        at: token,\n                        after: this.chopStart(i + 1)\n                    };\n            }\n            return null;\n        }\n        opSplitMany(splitOn) {\n            let iLast = this.start;\n            const out = [];\n            for (const i of this.indices()) {\n                const token = this.tokens[i];\n                if (splitOn(token)) {\n                    out.push({ before: this.chop(iLast, i), at: token });\n                    iLast = i + 1;\n                }\n            }\n            return Op_1.opIf(!util_1.isEmpty(out), () => {\n                out.push({ before: this.chopStart(iLast), at: null });\n                return out;\n            });\n        }\n        *indices() {\n            for (let i = this.start; i < this.end; i = i + 1)\n                yield i;\n        }\n        *[Symbol.iterator]() {\n            for (const i of this.indices())\n                yield this.tokens[i];\n        }\n        map(mapper) {\n            const out = [];\n            for (const _ of this)\n                out.push(mapper(_));\n            return out;\n        }\n        slice(newStart, newEnd, newLoc) {\n            return new this.constructor(this.tokens, newStart, newEnd, newLoc);\n        }\n        chop(newStart, newEnd) {\n            return this.slice(newStart, newEnd, new Loc_1.default(this.tokens[newStart].loc.start, this.tokens[newEnd - 1].loc.end));\n        }\n        chopStart(newStart) {\n            return this.slice(newStart, this.end, newStart === this.end ? this.loc : new Loc_1.default(this.tokens[newStart].loc.start, this.loc.end));\n        }\n        chopEnd(newEnd) {\n            return this.slice(this.start, newEnd, newEnd === this.start ? this.loc : new Loc_1.default(this.loc.start, this.tokens[newEnd - 1].loc.end));\n        }\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = Slice;\n    class Lines extends Slice {\n        static of(group) {\n            return super.of(group);\n        }\n        *slices() {\n            for (const _ of this)\n                yield Tokens.of(_);\n        }\n        headSlice() {\n            return Tokens.of(this.head());\n        }\n        lastSlice() {\n            return Tokens.of(this.last());\n        }\n        mapSlices(mapper) {\n            const out = [];\n            for (const _ of this.slices())\n                out.push(mapper(_));\n            return out;\n        }\n    }\n    exports.Lines = Lines;\n    class Tokens extends Slice {\n        static of(group) {\n            return super.of(group);\n        }\n        getKeywordSections(...keywords) {\n            const out = new Array(keywords.length + 1).fill(null);\n            let iNextKeyword = 0;\n            let iTokenPrev = this.start;\n            for (const iToken of this.indices()) {\n                const token = this.tokens[iToken];\n                if (token instanceof Keyword_1.KeywordPlain) {\n                    const kind = token.kind;\n                    for (let iKeyword = iNextKeyword; iKeyword < keywords.length; iKeyword = iKeyword + 1)\n                        if (kind === keywords[iKeyword]) {\n                            out[iNextKeyword] = this.chop(iTokenPrev, iToken);\n                            iNextKeyword = iKeyword + 1;\n                            iTokenPrev = iToken + 1;\n                        }\n                }\n            }\n            out[iNextKeyword] = this.chopStart(iTokenPrev);\n            return [Op_1.orThrow(util_1.head(out)), util_1.tail(out)];\n        }\n        takeKeywords(...keywords) {\n            const out = new Array(keywords.length).fill(false);\n            let iNextKeyword = 0;\n            let iTokenPrev = this.start;\n            loop: for (const iToken of this.indices()) {\n                const token = this.tokens[iToken];\n                if (token instanceof Keyword_1.KeywordPlain) {\n                    const kind = token.kind;\n                    for (let iKeyword = iNextKeyword; iKeyword < keywords.length; iKeyword = iKeyword + 1)\n                        if (kind === keywords[iKeyword]) {\n                            out[iNextKeyword] = true;\n                            iNextKeyword = iNextKeyword + 1;\n                            iTokenPrev = iToken + 1;\n                            continue loop;\n                        }\n                    break;\n                }\n            }\n            return [out, this.chopStart(iTokenPrev)];\n        }\n    }\n    exports.Tokens = Tokens;\n});\n"],"sourceRoot":"/source/"}