{"version":3,"sources":["private/parse/parseModule.js"],"names":[],"mappings":"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","file":"private/parse/parseModule.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', '../ast/locals', '../ast/Module', '../context', '../token/Group', '../token/Keyword', './checks', './parseBlock', './parseLine', './parseLocalDeclares', './parseName', './Slice', './tryTakeComment'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Op_1 = require('op/Op');\n    const locals_1 = require('../ast/locals');\n    const Module_1 = require('../ast/Module');\n    const context_1 = require('../context');\n    const Group_1 = require('../token/Group');\n    const Keyword_1 = require('../token/Keyword');\n    const checks_1 = require('./checks');\n    const parseBlock_1 = require('./parseBlock');\n    const parseLine_1 = require('./parseLine');\n    const parseLocalDeclares_1 = require('./parseLocalDeclares');\n    const parseName_1 = require('./parseName');\n    const Slice_1 = require('./Slice');\n    const tryTakeComment_1 = require('./tryTakeComment');\n    function parseModule(lines) {\n        const [opComment, rest0] = tryTakeComment_1.default(lines);\n        const [doImports, rest1] = takeImportDos(rest0);\n        const [plainImports, rest2] = takeImports(48, rest1);\n        const [lazyImports, rest3] = takeImports(50, rest2);\n        const moduleLines = parseLine_1.parseLines(rest3);\n        const imports = plainImports.concat(lazyImports);\n        return new Module_1.default(lines.loc, context_1.pathOptions.moduleName, opComment, doImports, imports, moduleLines);\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseModule;\n    function takeImports(importKeywordKind, lines) {\n        if (!lines.isEmpty()) {\n            const line = lines.headSlice();\n            if (Keyword_1.isKeyword(importKeywordKind, line.head()))\n                return [parseImports(importKeywordKind, line.tail()), lines.tail()];\n        }\n        return [[], lines];\n    }\n    function parseImports(importKeywordKind, tokens) {\n        const lines = parseBlock_1.justBlock(importKeywordKind, tokens);\n        return lines.mapSlices(line => {\n            const { path, name } = parseRequire(line.head());\n            const rest = line.tail();\n            const { imported, opImportDefault } = parseThingsImported(rest, name, importKeywordKind === 50);\n            return new Module_1.Import(line.loc, path, imported, opImportDefault);\n        });\n    }\n    function takeImportDos(lines) {\n        if (!lines.isEmpty()) {\n            const line = lines.headSlice();\n            if (Keyword_1.isKeyword(49, line.head()))\n                return [parseImportDos(line.tail()), lines.tail()];\n        }\n        return [[], lines];\n    }\n    function parseImportDos(tokens) {\n        const lines = parseBlock_1.justBlock(49, tokens);\n        return lines.mapSlices(line => {\n            const [{ path }, rest] = takeRequire(line);\n            checks_1.checkEmpty(rest, _ => _.unexpectedAfterImportDo);\n            return new Module_1.ImportDo(line.loc, path);\n        });\n    }\n    function parseThingsImported(tokens, name, isLazy) {\n        const importDefault = () => locals_1.LocalDeclare.untyped(tokens.loc, name, isLazy ? 1 : 0);\n        if (tokens.isEmpty())\n            return { imported: [], opImportDefault: importDefault() };\n        else {\n            const [opImportDefault, rest] = Keyword_1.isKeyword(46, tokens.head()) ?\n                [importDefault(), tokens.tail()] :\n                [null, tokens];\n            const imported = parseLocalDeclares_1.parseLocalDeclaresJustNames(rest).map(l => {\n                context_1.check(l.name !== '_', l.loc, _ => _.noImportFocus);\n                if (isLazy)\n                    l.kind = 1;\n                return l;\n            });\n            return { imported: imported, opImportDefault: opImportDefault };\n        }\n    }\n    function takeRequire(tokens) {\n        return [parseRequire(tokens.head()), tokens.tail()];\n    }\n    function parseRequire(token) {\n        return Op_1.caseOp(parseName_1.tryParseName(token), name => ({ path: name, name: name }), () => {\n            if (token instanceof Group_1.GroupSpace) {\n                const tokens = Slice_1.Tokens.of(token);\n                let rest = tokens;\n                const parts = [];\n                const head = rest.head();\n                Op_1.opEach(tryTakeNDots(head), n => {\n                    parts.push('.');\n                    for (let i = 1; i < n; i = i + 1)\n                        parts.push('..');\n                    rest = rest.tail();\n                    while (!rest.isEmpty()) {\n                        const n = tryTakeNDots(rest.head());\n                        if (n === null)\n                            break;\n                        else {\n                            for (let i = 0; i < n; i = i + 1)\n                                parts.push('..');\n                            rest = rest.tail();\n                        }\n                    }\n                });\n                while (true) {\n                    checks_1.checkNonEmpty(rest, _ => _.expectedImportModuleName);\n                    parts.push(parseName_1.default(rest.head()));\n                    rest = rest.tail();\n                    if (rest.isEmpty())\n                        break;\n                    checks_1.checkKeyword(41, rest.head());\n                    rest = rest.tail();\n                }\n                return { path: parts.join('/'), name: parts[parts.length - 1] };\n            }\n            else\n                context_1.fail(token.loc, _ => _.invalidImportModule);\n        });\n    }\n    function tryTakeNDots(token) {\n        if (token instanceof Keyword_1.KeywordPlain)\n            switch (token.kind) {\n                case 41:\n                    return 1;\n                case 42:\n                    return 2;\n                case 27:\n                    return 3;\n                default:\n                    return null;\n            }\n        else\n            return null;\n    }\n});\n"],"sourceRoot":"/source/"}