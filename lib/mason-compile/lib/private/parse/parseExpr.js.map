{"version":3,"sources":["private/parse/parseExpr.js"],"names":[],"mappings":"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","file":"private/parse/parseExpr.js","sourcesContent":["(function (factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        var v = factory(require, exports); if (v !== undefined) module.exports = v;\n    }\n    else if (typeof define === 'function' && define.amd) {\n        define([\"require\", \"exports\", 'op/Op', '../ast/Await', '../ast/booleans', '../ast/Call', '../ast/Class', '../ast/locals', '../ast/Val', '../ast/With', '../ast/YieldLike', '../context', '../token/Group', '../token/Keyword', '../util', './checks', './parseBlock', './parseClass', './parseCase', './parseDel', './parseExcept', './parseFor', './parseFunBlock', './parsePipe', './parsePoly', './parseSingle', './parseSwitch', './parseTrait', './parseLocalDeclares', './Slice'], factory);\n    }\n})(function (require, exports) {\n    \"use strict\";\n    const Op_1 = require('op/Op');\n    const Await_1 = require('../ast/Await');\n    const booleans_1 = require('../ast/booleans');\n    const Call_1 = require('../ast/Call');\n    const Class_1 = require('../ast/Class');\n    const locals_1 = require('../ast/locals');\n    const Val_1 = require('../ast/Val');\n    const With_1 = require('../ast/With');\n    const YieldLike_1 = require('../ast/YieldLike');\n    const context_1 = require('../context');\n    const Group_1 = require('../token/Group');\n    const Keyword_1 = require('../token/Keyword');\n    const util_1 = require('../util');\n    const checks_1 = require('./checks');\n    const parseBlock_1 = require('./parseBlock');\n    const parseClass_1 = require('./parseClass');\n    const parseCase_1 = require('./parseCase');\n    const parseDel_1 = require('./parseDel');\n    const parseExcept_1 = require('./parseExcept');\n    const parseFor_1 = require('./parseFor');\n    const parseFunBlock_1 = require('./parseFunBlock');\n    const parsePipe_1 = require('./parsePipe');\n    const parsePoly_1 = require('./parsePoly');\n    const parseSingle_1 = require('./parseSingle');\n    const parseSwitch_1 = require('./parseSwitch');\n    const parseTrait_1 = require('./parseTrait');\n    const parseLocalDeclares_1 = require('./parseLocalDeclares');\n    const Slice_1 = require('./Slice');\n    function parseExpr(tokens) {\n        checks_1.checkNonEmpty(tokens, _ => _.expectedExpression);\n        const parts = parseExprParts(tokens);\n        if (parts.length === 1) {\n            if (tokens.head() instanceof Group_1.GroupParenthesis)\n                context_1.warn(tokens.loc, _ => _.extraParens);\n            return util_1.head(parts);\n        }\n        else\n            return new Call_1.default(tokens.loc, util_1.head(parts), util_1.tail(parts));\n    }\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = parseExpr;\n    function opParseExpr(tokens) {\n        return Op_1.opIf(!tokens.isEmpty(), () => parseExpr(tokens));\n    }\n    exports.opParseExpr = opParseExpr;\n    function parseExprParts(tokens) {\n        return Op_1.caseOp(tokens.opSplitOnce(Keyword_1.isExprSplitKeyword), ({ before, at, after }) => util_1.cat(before.map(parseSingle_1.default), keywordExpr(at, after)), () => {\n            const last = tokens.last();\n            if (last instanceof Group_1.GroupParenthesis) {\n                const h = Slice_1.Tokens.of(last).head();\n                if (Keyword_1.isExprSplitKeyword(h))\n                    context_1.warn(h.loc, _ => _.extraParens);\n            }\n            return tokens.map(parseSingle_1.default);\n        });\n    }\n    exports.parseExprParts = parseExprParts;\n    function parseNExprParts(tokens, n, message) {\n        const parts = parseExprParts(tokens);\n        context_1.check(parts.length === n, tokens.loc, message);\n        return parts;\n    }\n    exports.parseNExprParts = parseNExprParts;\n    function keywordExpr(at, after) {\n        if (at instanceof Keyword_1.KeywordFun)\n            return parseFunBlock_1.default(at.options, after);\n        else if (at instanceof Keyword_1.KeywordOperator)\n            return new Val_1.Operator(at.loc, at.kind, parseExprParts(after));\n        else if (at instanceof Keyword_1.KeywordUnaryOperator)\n            return new Val_1.UnaryOperator(at.loc, at.kind, parseExpr(after));\n        else if (at instanceof Keyword_1.KeywordPlain)\n            return keywordPlainExpr(at, after);\n        else\n            throw new Error(at.name());\n    }\n    function keywordPlainExpr({ kind, loc }, after) {\n        switch (kind) {\n            case 0:\n                return new Await_1.default(loc, parseExpr(after));\n            case 1:\n                return parseCase_1.default(after);\n            case 2:\n                return parseClass_1.default(after);\n            case 3:\n                return parseCond(after);\n            case 4:\n                return parseDel_1.default(after);\n            case 5:\n                return parseExcept_1.default(after);\n            case 6:\n                return parseFor_1.parseFor(after);\n            case 7:\n                return parseFor_1.parseForAsync(after);\n            case 8:\n                return parseFor_1.parseForBag(after);\n            case 9:\n            case 16:\n                return parseConditional(kind, after);\n            case 10: {\n                const parts = parseExprParts(after);\n                return new Call_1.New(loc, util_1.head(parts), util_1.tail(parts));\n            }\n            case 12:\n                return parsePipe_1.default(after);\n            case 11:\n                return parsePoly_1.default(after);\n            case 13:\n                return new Class_1.SuperCall(loc, parseExprParts(after));\n            case 14:\n                return parseSwitch_1.default(after);\n            case 15:\n                return parseTrait_1.default(after);\n            case 17:\n                return parseWith(after);\n            case 18:\n                return new YieldLike_1.Yield(loc, Op_1.opIf(!after.isEmpty(), () => parseExpr(after)));\n            case 19:\n                return new YieldLike_1.YieldTo(loc, parseExpr(after));\n            default:\n                throw new Error(String(kind));\n        }\n    }\n    function parseCond(tokens) {\n        const [cond, ifTrue, ifFalse] = parseNExprParts(tokens, 3, _ => _.argsCond);\n        return new booleans_1.Cond(tokens.loc, cond, ifTrue, ifFalse);\n    }\n    function parseConditional(kind, tokens) {\n        const [before, opBlock] = parseBlock_1.beforeAndOpBlock(tokens);\n        const [condition, result] = Op_1.caseOp(opBlock, _ => [parseExpr(before), parseBlock_1.default(_)], () => parseNExprParts(before, 2, _ => _.argsConditional(kind)));\n        return new booleans_1.Conditional(tokens.loc, condition, result, kind === 16);\n    }\n    function parseWith(tokens) {\n        const [before, block] = parseBlock_1.beforeAndBlock(tokens);\n        const [val, declare] = Op_1.caseOp(before.opSplitOnce(_ => Keyword_1.isKeyword(35, _)), ({ before, after }) => {\n            context_1.check(after.size() === 1, after.loc, _ => _.asToken);\n            return [parseExpr(before), parseLocalDeclares_1.parseLocalDeclare(after.head())];\n        }, () => [parseExpr(before), locals_1.LocalDeclare.focus(tokens.loc)]);\n        return new With_1.default(tokens.loc, declare, val, parseBlock_1.default(block));\n    }\n});\n"],"sourceRoot":"/source/"}